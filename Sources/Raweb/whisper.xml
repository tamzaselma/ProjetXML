<?xml version="1.0" encoding="utf-8"?>
<raweb xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="en" year="2016">
  <identification id="whisper" isproject="true">
    <shortname>WHISPER</shortname>
    <projectName>Well Honed Infrastructure Software for Programming Environments and Runtimes</projectName>
    <theme-de-recherche>Distributed Systems and middleware</theme-de-recherche>
    <domaine-de-recherche>Networks, Systems and Services, Distributed Computing</domaine-de-recherche>
    <structure_exterieure type="Labs">
      <libelle>Laboratoire d'informatique de Paris 6 (LIP6)</libelle>
    </structure_exterieure>
    <structure_exterieure type="Organism">
      <libelle>CNRS</libelle>
    </structure_exterieure>
    <structure_exterieure type="Organism">
      <libelle>Université Pierre et Marie Curie (Paris 6)</libelle>
    </structure_exterieure>
    <header_dates_team>Creation of the Team: 2014 May 15, updated into Project-Team: 2015 December 01</header_dates_team>
    <LeTypeProjet>Project-Team</LeTypeProjet>
    <keywordsSdN>
      <term>1. - Architectures, systems and networks</term>
      <term>1.1.1. - Multicore</term>
      <term>2. - Software</term>
      <term>2.1.6. - Concurrent programming</term>
      <term>2.1.10. - Domain-specific languages</term>
      <term>2.1.11. - Proof languages</term>
      <term>2.2.1. - Static analysis</term>
      <term>2.2.3. - Run-time systems</term>
      <term>2.3.1. - Embedded systems</term>
      <term>2.3.3. - Real-time systems</term>
      <term>2.4. - Verification, reliability, certification</term>
      <term>2.4.3. - Proofs</term>
      <term>2.5. - Software engineering</term>
      <term>2.6. - Infrastructure software</term>
      <term>2.6.1. - Operating systems</term>
      <term>2.6.2. - Middleware</term>
      <term>2.6.3. - Virtual machines</term>
    </keywordsSdN>
    <keywordsSecteurs>
      <term>5. - Industry of the future</term>
      <term>5.2.1. - Road vehicles</term>
      <term>5.2.3. - Aviation</term>
      <term>5.2.4. - Aerospace</term>
      <term>6.1. - Software industry</term>
      <term>6.1.1. - Software engineering</term>
      <term>6.1.2. - Software evolution, maintenance</term>
      <term>6.3.3. - Network Management</term>
      <term>6.5. - Information systems</term>
      <term>6.6. - Embedded systems</term>
    </keywordsSecteurs>
    <UR name="Paris"/>
  </identification>
  <team id="uid1">
    <person key="whisper-2014-idm28256">
      <firstname>Gilles</firstname>
      <lastname>Muller</lastname>
      <categoryPro>Chercheur</categoryPro>
      <research-centre>Paris</research-centre>
      <moreinfo>Team leader, Inria, Senior Researcher</moreinfo>
      <hdr>oui</hdr>
    </person>
    <person key="whisper-2014-idm26816">
      <firstname>Julia</firstname>
      <lastname>Lawall</lastname>
      <categoryPro>Chercheur</categoryPro>
      <research-centre>Paris</research-centre>
      <moreinfo>Inria, Senior Researcher</moreinfo>
      <hdr>oui</hdr>
    </person>
    <person key="gallium-2014-idp75592">
      <firstname>Pierre-Évariste</firstname>
      <lastname>Dagand</lastname>
      <categoryPro>Chercheur</categoryPro>
      <research-centre>Paris</research-centre>
      <moreinfo>CNRS, Researcher</moreinfo>
    </person>
    <person key="whisper-2014-idp66600">
      <firstname>Bertil</firstname>
      <lastname>Folliot</lastname>
      <categoryPro>Enseignant</categoryPro>
      <research-centre>Paris</research-centre>
      <moreinfo>Univ. Paris VI, Professor</moreinfo>
      <hdr>oui</hdr>
    </person>
    <person key="whisper-2014-idp70760">
      <firstname>Quentin</firstname>
      <lastname>Lambert</lastname>
      <categoryPro>Technique</categoryPro>
      <research-centre>Paris</research-centre>
      <moreinfo>Inria, until Oct 2016</moreinfo>
    </person>
    <person key="whisper-2016-idp25888">
      <firstname>Cédric</firstname>
      <lastname>Courtaud</lastname>
      <categoryPro>PhD</categoryPro>
      <research-centre>Paris</research-centre>
      <moreinfo>Thales, from Mar 2016, granted by CIFRE</moreinfo>
    </person>
    <person key="whisper-2016-idp28352">
      <firstname>Redha</firstname>
      <lastname>Gouicem</lastname>
      <categoryPro>PhD</categoryPro>
      <research-centre>Paris</research-centre>
      <moreinfo>Univ. Paris VI, from Oct 2016</moreinfo>
    </person>
    <person key="whisper-2016-idp30816">
      <firstname>Greg</firstname>
      <lastname>Kroah-Hartman</lastname>
      <categoryPro>Visiteur</categoryPro>
      <research-centre>Paris</research-centre>
      <moreinfo>Linux Foundation, from October 2016</moreinfo>
    </person>
    <person key="regal-2014-idp85056">
      <firstname>Helene</firstname>
      <lastname>Milome</lastname>
      <categoryPro>Assistant</categoryPro>
      <research-centre>Paris</research-centre>
      <moreinfo>Inria</moreinfo>
    </person>
    <person key="whisper-2016-idp35776">
      <firstname>Eugène</firstname>
      <lastname>Kamdem</lastname>
      <categoryPro>Assistant</categoryPro>
      <research-centre>Paris</research-centre>
      <moreinfo>UPMC</moreinfo>
    </person>
    <person key="whisper-2014-idp74488">
      <firstname>Antoine</firstname>
      <lastname>Blin</lastname>
      <categoryPro>PhD</categoryPro>
      <research-centre>Paris</research-centre>
      <moreinfo>Inria, until July 2016, Engineer from November 2016</moreinfo>
    </person>
  </team>
  <presentation id="uid2">
    <bodyTitle>Overall Objectives</bodyTitle>
    <subsection id="uid3" level="1">
      <bodyTitle>Overall Objectives</bodyTitle>
      <p>The focus of Whisper is on how to develop (new) and improve
(existing) infrastructure software. Infrastructure software (also
called systems software) is the software that underlies all
computing. Such software allows applications to access resources and
provides essential services such as memory management, synchronization
and inter-process interactions. Starting bottom-up from the hardware,
examples include virtual machine hypervisors, operating systems,
managed runtime environments, standard libraries, and browsers, which
amount to the new operating system layer for Internet applications.
For such software, efficiency and correctness are fundamental. Any
overhead will impact the performance of all supported
applications. Any failure will prevent the supported applications from
running correctly. Since computing now pervades our society, with few
paper backup solutions, correctness of software at all levels is
critical. Formal methods are increasingly being applied to operating
systems code in the research
community <ref xlink:href="#whisper-2016-bid0" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid1" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid2" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>.
Still, such efforts require a huge amount of manpower and a high
degree of expertise which makes this work difficult to replicate
in standard infrastructure-software development.</p>
      <p>In terms of methodology, Whisper is at the interface of the domains of
operating systems, software engineering and programming languages. Our
approach is to combine the study of problems in the development of
real-world infrastructure software with concepts in programming language
design and implementation, <i>e.g.</i>, of domain-specific languages, and
knowledge of low-level system behavior. A focus of our work is on
providing support for legacy code, while taking the needs and competences
of ordinary system developers into account.</p>
      <p>We aim at providing solutions that can be easily learned and adopted
by system developers in the short term. Such solutions can be tools,
such as
Coccinelle <ref xlink:href="#whisper-2016-bid3" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid4" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid5" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>
for transforming C programs (see Section <ref xlink:href="#uid24" location="intern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>),
or domain-specific languages such as
Devil <ref xlink:href="#whisper-2016-bid6" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> and
Bossa <ref xlink:href="#whisper-2016-bid7" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> for designing drivers and kernel
schedulers. Due to the small size of the team, Whisper mainly
targets operating system kernels and runtimes for programming
languages. We put an emphasis on achieving measurable
improvements in performance and safety in practice, and on feeding
these improvements back to the infrastructure software developer
community.</p>
    </subsection>
  </presentation>
  <fondements id="uid4">
    <bodyTitle>Research Program</bodyTitle>
    <subsection id="uid5" level="1">
      <bodyTitle>Scientific Foundations</bodyTitle>
      <subsection id="uid6" level="2">
        <bodyTitle>Program analysis</bodyTitle>
        <p>A fundamental goal of the research in the Whisper team is to elicit and
exploit the knowledge found in existing code. To do this in a way that
scales to a large code base, systematic methods are needed to infer code
properties. We may build on either static
<ref xlink:href="#whisper-2016-bid8" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid9" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid10" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> or dynamic analysis
<ref xlink:href="#whisper-2016-bid11" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid12" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid13" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. Static analysis consists of
approximating the behavior of the source code from the source code alone,
while dynamic analysis draws conclusions from observations of sample
executions, typically of test cases. While dynamic analysis can be more
accurate, because it has access to information about actual program
behavior, obtaining adequate test cases is difficult. This difficulty is
compounded for infrastructure software, where many, often obscure, cases
must be handled, and external effects such as timing can have a significant
impact. Thus, we expect to primarily use static analyses. Static analyses
come in a range of flavors, varying in the extent to which the analysis is
<i>sound</i>, <i>i.e.</i>, the extent to which the results are guaranteed to
reflect possible run-time behaviors.</p>
        <p>One form of sound static analysis is <i>abstract
interpretation</i> <ref xlink:href="#whisper-2016-bid9" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. In abstract interpretation, atomic
terms are interpreted as sound abstractions of their values, and operators
are interpreted as functions that soundly manipulate these abstract values.
The analysis is then performed by interpreting the program in a
compositional manner using these abstracted values and operators.
Alternatively, <i>dataflow analysis</i> <ref xlink:href="#whisper-2016-bid14" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> iteratively
infers connections between variable definitions and uses, in terms of local
transition rules that describe how various kinds of program constructs may
impact variable values. Schmidt has explored the relationship between
abstract interpretation and dataflow analysis <ref xlink:href="#whisper-2016-bid15" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>.
More recently, more general forms of symbolic
execution <ref xlink:href="#whisper-2016-bid8" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> have emerged as a means of understanding
complex code. In symbolic execution, concrete values are used when
available, and these are complemented by constraints that are inferred from
terms for which only partial information is available. Reasoning about
these constraints is then used to prune infeasible paths, and obtain more
precise results. A number of works apply symbolic execution to operating
systems code <ref xlink:href="#whisper-2016-bid16" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid17" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>.</p>
        <p>While sound approaches are guaranteed to give correct results, they
typically do not scale to the very diverse code bases that are prevalent in
infrastructure software. An important insight of Engler et
al. <ref xlink:href="#whisper-2016-bid18" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> was that valuable information could be obtained
even when sacrificing soundness, and that sacrificing soundness could make
it possible to treat software at the scales of the kernels of the Linux or
BSD operating systems. Indeed, for certain types of problems, on certain
code bases, that may mostly follow certain coding conventions, it may
mostly be safe to <i>e.g.</i>, ignore the effects of aliases, assume that
variable values are unchanged by calls to unanalyzed functions, etc. Real
code has to be understood by developers and thus cannot be too complicated,
so such simplifying assumptions are likely to hold in practice.
Nevertheless, approaches that sacrifice soundness also require the user to
manually validate the results. Still, it is likely to be much more
efficient for the user to perform a potentially complex manual analysis in
a specific case, rather than to implement all possible required analyses
and apply them everywhere in the code base. A refinement of unsound
analysis is the CEGAR approach <ref xlink:href="#whisper-2016-bid19" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, in which a highly
approximate analysis is complemented by a sound analysis that checks the
individual reports of the approximate analysis, and then any errors in
reasoning detected by the sound analysis are used to refine the approximate
analysis. The CEGAR approach has been applied effectively on device driver
code in tools developed at Microsoft  <ref xlink:href="#whisper-2016-bid20" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. The
environment in which the driver executes, however, is still represented by
possibly unsound approximations.</p>
        <p>Going further in the direction of sacrificing soundness for scalability,
the software engineering community has recently explored a number of
approaches to code understanding based on techniques developed in the areas
of natural language understanding, data mining, and information retrieval.
These approaches view code, as well as other software-reated artifacts,
such as documentation and postings on mailing lists, as bags of words
structured in various ways. Statistical methods are then used to collect
words or phrases that seem to be highly correlated, independently of the
semantics of the program constructs that connect them. The obliviousness
to program semantics can lead to many false positives (invalid
conclusions) <ref xlink:href="#whisper-2016-bid21" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, but can also highlight trends that
are not apparent at the low level of individual program statements. We
have previously explored combining such statistical methods with more traditional
static analysis in identifying faults in the usage of constants in Linux
kernel code <ref xlink:href="#whisper-2016-bid22" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>.</p>
      </subsection>
      <subsection id="uid7" level="2">
        <bodyTitle>Domain Specific Languages</bodyTitle>
        <p>Writing low-level infrastructure code is tedious and difficult, and
verifying it is even more so. To produce non-trivial programs, we
could benefit from moving up the abstraction stack to enable both
programming and proving as quickly as possible. Domain-specific
languages (DSLs), also known as <i>little languages</i>, are a means to
that end <ref xlink:href="#whisper-2016-bid23" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> <ref xlink:href="#whisper-2016-bid24" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>.</p>
        <subsection id="uid8" level="3">
          <bodyTitle>Traditional approach.</bodyTitle>
          <p>Using little languages to aid in software development is a
tried-and-trusted technique <ref xlink:href="#whisper-2016-bid25" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> by which
programmers can express high-level ideas about the system at hand and
avoid writing large quantities of formulaic C boilerplate.</p>
          <p>This approach is typified by the Devil language for hardware
access <ref xlink:href="#whisper-2016-bid6" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. An OS programmer describes the
register set of a hardware device in the high-level Devil language,
which is then compiled into a library providing C functions to read
and write values from the device registers. In doing so, Devil frees
the programmer from having to write extensive bit-manipulation macros
or inline functions to map between the values the OS code deals with,
and the bit-representation used by the hardware: Devil generates code
to do this automatically.</p>
          <p>However, DSLs are not restricted to being “stub” compilers from
declarative specifications. The Bossa language <ref xlink:href="#whisper-2016-bid7" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>
is a prime example of a DSL involving imperative code (syntactically
close to C) while offering a high-level of abstraction. This design of
Bossa enables the developer to implement new process scheduling
policies at a level of abstraction tailored to the application domain.</p>
          <p>Conceptually, a DSL both abstracts away low-level details and
justifies the abstraction by its semantics. In principle, it reduces
development time by allowing the programmer to focus on high-level
abstractions. The programmer needs to write less code, in a language
with syntax and type checks adapted to the problem at hand, thus
reducing the likelihood of errors.</p>
        </subsection>
        <subsection id="uid9" level="3">
          <bodyTitle>Embedding DSLs.</bodyTitle>
          <p>The idea of a DSL has yet to realize its full potential in the OS
community. Indeed, with the notable exception of interface definition
languages for remote procedure call (RPC) stubs, most OS code is still
written in a low-level language, such as C. Where DSL code generators
are used in an OS, they tend to be extremely simple in both syntax and
semantics. We conjecture that the effort to implement a given DSL
usually outweighs its benefit. We identify several serious obstacles
to using DSLs to build a modern OS: specifying what the generated code
will look like, evolving the DSL over time, debugging generated code,
implementing a bug-free code generator, and testing the DSL compiler.</p>
          <p>Filet-o-Fish (FoF) <ref xlink:href="#whisper-2016-bid26" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> addresses these issues by
providing a framework in which to build correct code generators from
semantic specifications. This framework is presented as a Haskell
library, enabling DSL writers to <i>embed</i> their languages within
Haskell. DSL compilers built using FoF are quick to write, simple, and
compact, but encode rigorous semantics for the generated code. They
allow formal proofs of the run-time behavior of generated code, and
automated testing of the code generator based on randomized inputs,
providing greater test coverage than is usually feasible in a DSL.
The use of FoF results in DSL compilers that OS developers can quickly
implement and evolve, and that generate provably correct code. FoF
has been used to build a number of domain-specific languages used in
Barrelfish, <ref xlink:href="#whisper-2016-bid27" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> an OS for heterogeneous
multicore systems developed at ETH Zurich.</p>
          <p>The development of an embedded DSL requires a few supporting
abstractions in the host programming language. FoF was developed in
the purely functional language Haskell, thus benefiting from the type
class mechanism for overloading, a flexible parser offering convenient
syntactic sugar, and purity enabling a more algebraic approach based
on small, composable combinators. Object-oriented languages – such as
Smalltalk <ref xlink:href="#whisper-2016-bid28" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> and its descendant
Pharo <ref xlink:href="#whisper-2016-bid29" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> – or multi-paradigm languages – such
as the Scala programming language <ref xlink:href="#whisper-2016-bid30" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> – also
offer a wide range of mechanisms enabling the development of embedded
DSLs. Perhaps suprisingly, a low-level imperative language – such as
C – can also be extended so as to enable the development of embedded
compilers <ref xlink:href="#whisper-2016-bid31" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>.</p>
        </subsection>
        <subsection id="uid10" level="3">
          <bodyTitle>Certifying DSLs.</bodyTitle>
          <p>Whilst automated and interactive software verification tools are
progressively being applied to larger and larger programs, we have not
yet reached the point where large-scale, legacy software – such as
the Linux kernel – could formally be proved “correct”. DSLs enable
a pragmatic approach, by which one could realistically strengthen a
large legacy software by first narrowing down its critical
component(s) and then focus our verification efforts onto these
components.</p>
          <p>Dependently-typed languages, such as Coq or Idris, offer an ideal
environment for embedding DSLs <ref xlink:href="#whisper-2016-bid32" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid33" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> in
a unified framework enabling verification. Dependent types support the
type-safe embedding of object languages and Coq's mixfix notation
system enables reasonably idiomatic domain-specific concrete syntax.
Coq's powerful abstraction facilities provide a flexible framework in
which to not only implement and verify a range of domain-specific
compilers <ref xlink:href="#whisper-2016-bid26" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, but also to combine them, and reason
about their combination.</p>
          <p>Working with many DSLs optimizes the “horizontal” compositionality
of systems, and favors reuse of building blocks, by contrast with the
“vertical” composition of the traditional compiler pipeline,
involving a stack of comparatively large intermediate languages that
are harder to reuse the higher one goes. The idea of building
compilers from reusable building blocks is a common one, of
course. But the interface contracts of such blocks tend to be complex,
so combinations are hard to get right. We believe that being able to
write and verify formal specifications for the pieces will make it
possible to know when components can be combined, and should help in
designing good interfaces.</p>
          <p>Furthermore, the fact that Coq is also a system for formalizing
mathematics enables one to establish a close, formal connection
between embedded DSLs and non-trivial domain-specific models. The
possibility of developing software in a truly “model-driven” way is
an exciting one. Following this methodology, we have implemented a
certified compiler from regular expressions to x86 machine
code <ref xlink:href="#whisper-2016-bid34" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. Interestingly, our development
crucially relied on an existing Coq formalization, due to Braibant and
Pous, <ref xlink:href="#whisper-2016-bid35" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> of the theory of Kleene algebras.</p>
          <p spacebefore="12.0pt">While these individual experiments seem to converge toward embedding
domain-specific languages in rich type theories, further experimental
validation is required. Indeed, Barrelfish is an extremely small
software compared to the Linux kernel. The challenge lies in scaling
this methodology up to large software systems. Doing so calls for a
unified platform enabling the development of a myriad of DSLs,
supporting code reuse across DSLs as well as providing support for
mechanically-verified proofs.</p>
        </subsection>
      </subsection>
    </subsection>
    <subsection id="uid11" level="1">
      <bodyTitle>Research direction: Tools for improving legacy infrastructure software</bodyTitle>
      <p>A cornerstone of our work on legacy infrastructure software is the
Coccinelle program matching and transformation tool for C code. Coccinelle
has been in continuous development since 2005. Today, Coccinelle is
extensively used in the context of Linux kernel development, as well as in
the development of other software, such as wine, python, kvm, and systemd.
Currently, Coccinelle is a mature software project, and no research is
being conducted on Coccinelle itself. Instead, we leverage Coccinelle
in other research
projects  <ref xlink:href="#whisper-2016-bid36" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid37" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid38" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid39" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid40" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid41" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid42" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/><ref xlink:href="#whisper-2016-bid43" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid44" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>,
both for code exploration, to better understand at a large scale
problems in Linux development, and as an essential component in tools
that require program matching and transformation. The continuing
development and use of Coccinelle is also a source of visibility in
the Linux kernel developer community. We submitted the first patches
to the Linux kernel based on Coccinelle in 2007. Since then, over 4500
patches have been accepted into the Linux kernel based on the use of
Coccinelle, including around 3000 by over 500 developers from outside
our research group.</p>
      <p>Our recent work has focused on driver porting. Specifically, we have
considered the problem of porting a Linux device driver across versions,
particularly backporting, in which a modern driver needs to be used by a
client who, typically for reasons of stability, is not able to update their
Linux kernel to the most recent version. When multiple drivers need to be
backported, they typically need many common changes, suggesting that
Coccinelle could be applicable. Using Coccinelle, however, requires
writing backporting transformation rules. In order to more fully automate
the backporting (or symmetrically forward porting) process, these rules
should be generated automatically. We have carried out a preliminary study
in this direction with David Lo of Singapore Management University; this
work, published at ICSME 2016 <ref xlink:href="#whisper-2016-bid45" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, is limited to a
port from one version to the next one, in the case where the amount of
change required is limited to a single line of code. Whisper has been
awarded an ANR PRCI grant, to start in March 2017, to collaborate with the
group of David Lo on scaling up the rule inference process and proposing a
fully automatic porting solution.</p>
    </subsection>
    <subsection id="uid12" level="1">
      <bodyTitle>Research direction: developing infrastructure software using Domain Specific Languages</bodyTitle>
      <p>We wish to pursue a <i>declarative</i> approach to developing
infrastructure software. Indeed, there exists a significant gap
between the high-level objectives of these systems and their
implementation in low-level, imperative programming languages. To
bridge that gap, we propose an approach based on domain-specific
languages (DSLs). By abstracting away boilerplate code, DSLs increase
the productivity of systems programmers. By providing a more
declarative language, DSLs reduce the complexity of code, thus the
likelihood of bugs.</p>
      <p>Traditionally, systems are built by accretion of several, independent
DSLs. For example, one might use Devil <ref xlink:href="#whisper-2016-bid6" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> to
interact with devices, Bossa <ref xlink:href="#whisper-2016-bid7" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> to implement the
scheduling policies. However, much effort is duplicated in
implementing the back-ends of the individual DSLs. Our long term goal is to
design a unified framework for developing and composing DSLs, following our
work on Filet-o-Fish <ref xlink:href="#whisper-2016-bid26" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. By providing a single conceptual
framework, we hope to amortize the development cost of a myriad of DSLs
through a principled approach to reusing and composing them.</p>
      <p>Beyond the software engineering aspects, a unified platform brings us
closer to the implementation of mechanically-verified DSLs. Dagand's
recent work using the Coq proof assistant as an x86
macro-assembler <ref xlink:href="#whisper-2016-bid34" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> is a step in that direction,
which belongs to a larger trend of hosting DSLs in dependent type
theories <ref xlink:href="#whisper-2016-bid33" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid46" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid32" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. A key
benefit of those approaches is to provide – by construction – a
formal, mechanized semantics to the DSLs thus developed. This
semantics offers a foundation on which to base further verification
efforts, whilst allowing interaction with non-verified code. We
advocate a methodology based on incremental, piece-wise
verification. Whilst building fully-certified systems from the
top-down is a worthwhile endeavor <ref xlink:href="#whisper-2016-bid1" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, we wish to
explore a bottom-up approach by which one focuses first and foremost
on crucial subsystems and their associated properties.</p>
      <p>Our current work on DSLs has two complementary goals: (i) the design of a
unified framework for developing and composing DSLs, following our work on
Filet-o-Fish, and (ii) the design of domain-specific languages for domains
where there is a critical need for code correctness, and corresponding
methodologies for proving properties of the run-time behavior of the
system.</p>
    </subsection>
  </fondements>
  <domaine id="uid13">
    <bodyTitle>Application Domains</bodyTitle>
    <subsection id="uid14" level="1">
      <bodyTitle>Linux</bodyTitle>
      <p>Linux is an open-source operating system that is used in settings ranging
from embedded systems to supercomputers. The most recent release of the
Linux kernel, v4.9, comprises over 14 million lines of code, and supports
31 different families of CPU architectures, 73 file systems, and thousands
of device drivers. Linux is also in a rapid stage of development, with new
versions being released roughly every 2.5 months. Recent versions have
each incorporated around 13,500 commits, from around 1500 developers.
These developers have a wide range of expertise, with some providing
hundreds of patches per release, while others have contributed only one.
Overall, the Linux kernel is critical software, but software in which the
quality of the developed source code is highly variable. These features,
combined with the fact that the Linux community is open to contributions
and to the use of tools, make the Linux kernel an attractive target for
software researchers. Tools that result from research can be directly
integrated into the development of real software, where it can have a high,
visible impact.</p>
      <p>Starting from the work of Engler et al.  <ref xlink:href="#whisper-2016-bid47" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, numerous
research tools have been applied to the Linux kernel, typically for finding
bugs  <ref xlink:href="#whisper-2016-bid10" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid48" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid49" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid50" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>
or for computing software metrics  <ref xlink:href="#whisper-2016-bid51" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid52" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. In our
work, we have studied generic C bugs in Linux code <ref xlink:href="#whisper-2016-bid5" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>,
bugs in function protocol usage  <ref xlink:href="#whisper-2016-bid53" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid54" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>,
issues related to the processing of bug reports  <ref xlink:href="#whisper-2016-bid55" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> and
crash dumps  <ref xlink:href="#whisper-2016-bid56" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, and the problem of backporting  <ref xlink:href="#whisper-2016-bid39" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, illustrating the variety of issues that can be explored on this
code base. Unique among research groups working in this area, we have
furthermore developed numerous contacts in the Linux developer community.
These contacts provide insights into the problems actually faced by
developers and serve as a means of validating the practical relevance of
our work. Section <ref xlink:href="#uid29" location="intern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> presents our dissemination efforts to the Linux
community.</p>
    </subsection>
    <subsection id="uid15" level="1">
      <bodyTitle>Device Drivers</bodyTitle>
      <p>Device drivers are essential to modern computing, to provide
applications with access, via the operating system, to physical
devices such as keyboards, disks, networks, and cameras. Development
of new computing paradigms, such as the internet of things, is
hampered because device driver development is challenging and
error-prone, requiring a high level of expertise in both the targeted
OS and the specific device. Furthermore, implementing just one driver
is often not sufficient; today's computing landscape is characterized
by a number of OSes, <i>e.g.</i>, Linux, Windows, MacOS, BSD and many
real time OSes, and each is found in a wide range of variants and
versions. All of these factors make the development, porting,
backporting, and maintenance of device drivers a critical problem for
device manufacturers, industry that requires specific devices, and
even for ordinary users.</p>
      <p>The last fifteen years have seen a number of approaches directed towards
easing device driver development. Réveillère, who was supervised
by G. Muller, proposes Devil <ref xlink:href="#whisper-2016-bid6" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, a
domain-specific language for describing the low-level interface of a
device. Chipounov <i>et al.</i> propose
RevNic, <ref xlink:href="#whisper-2016-bid17" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> a template-based approach for
porting device drivers from one OS to another. Ryzhyk <i>et
al.</i> propose Termite, <ref xlink:href="#whisper-2016-bid57" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid58" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> an approach
for synthesizing device driver code from a specification of an OS and a
device. Currently, these approaches have been successfully applied to only
a small number of toy drivers. Indeed, Kadav and
Swift <ref xlink:href="#whisper-2016-bid59" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> observe that these approaches make
assumptions that are not satisfied by many drivers; for example, the
assumption that a driver involves little computation other than the direct
interaction between the OS and the device. At the same time, a number of
tools have been developed for finding bugs in driver code. These tools
include SDV <ref xlink:href="#whisper-2016-bid20" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, Coverity <ref xlink:href="#whisper-2016-bid47" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>,
CP-Miner, <ref xlink:href="#whisper-2016-bid60" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> PR-Miner <ref xlink:href="#whisper-2016-bid48" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, and
Coccinelle <ref xlink:href="#whisper-2016-bid4" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. These approaches, however, focus
on analyzing existing code, and do not provide guidelines on structuring
drivers.</p>
      <p>In summary, there is still a need for a methodology that first helps the
developer understand the software architecture of drivers for commonly used
operating systems, and then provides tools for the
maintenance of existing drivers.</p>
    </subsection>
  </domaine>
  <highlights id="uid16">
    <bodyTitle>Highlights of the Year</bodyTitle>
    <subsection id="uid17" level="1">
      <bodyTitle>Highlights of the Year</bodyTitle>
      <p>The main highlight of the year is the continuous spreading of
Coccinelle within the developer community of the Linux kernel. We
submitted the first patches to the Linux kernel based on Coccinelle in
2007. Since then, over 4500 patches have been accepted into the Linux
kernel based on the use of Coccinelle, including around 3000 by over
500 developers from outside our research group. Another testimonial of
the impact of our work is the signature of a Memorendum Of
Understanding (MOU) with the Linux Foundation. As part of the MOU,
Greg Kroah-Hartman will spend a year with Whisper starting in October
2016. Kroah-Hartman is one of the leading developers of the Linux
kernel, and is one of only a few developers employed by the
Linux Foundation, with another being Linus Torvalds. Greg
participated in the activities of the Whisper team around the use of
Coccinelle and research projects related to the Linux kernel, and he
is a convinced ambassador of our research work.</p>
      <p>Our work on Remote Core Locking (RCL) <ref xlink:href="#whisper-2016-bid43" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> was
accepted in ACM Transaction in Computer Systems (TOCS) which is the
most prestigious journal in systems. RCL is currently one of the most
efficient locks for multicore architectures.</p>
    </subsection>
  </highlights>
  <logiciels id="uid18">
    <bodyTitle>New Software and Platforms</bodyTitle>
    <subsection id="uid19" level="1">
      <bodyTitle>Prequel</bodyTitle>
      <p><span class="smallcap" align="left">Keywords:</span> Code quality - Evolution - Infrastructure software</p>
      <p noindent="true">
        <span class="smallcap" align="left">Functional Description</span>
      </p>
      <p>The commit history of a large, actively developed code base such as the
Linux kernel is a gold mine
of information on how evolutions should be made, how bugs should be fixed,
etc. Nevertheless, the high volume of commits available and the
rudimentary filtering tools provided imply that it is often necessary to
wade through a lot of irrelevant information before finding example commits
that can help with a specific software development problem. To address
this issue, we have developed Prequel (Patch Query Language)
<ref xlink:href="#whisper-2016-bid44" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. Prequel builds on the semantic patch lamguage SmPL
developed for Coccinelle, which is now well known to the Linux kernel
developer community, to allow developers to scan the changes in a source
code development history, taking into account not only the specific changes
made, but also the context in which these changes occur. As the history of
a code base under active development quickly becomes large, with the Linux
kernel incorporating around 13,000 commits on each 2-3 month release cycle,
a particular goal in the development of Prequel has been to provide
reasonable performance. Currently, most queries in our experiments
complete in under minute when running on a single core on a standard
laptop. So far, we have applied Prequel to the problem of understanding how to
eliminate uses of deprecated functions <ref xlink:href="#whisper-2016-bid44" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, and are
investigating how it may be
useful in a systematic driver porting methodology.</p>
      <p>Prequel is publicly available under GPLv2. The development of Prequel is
supported by OSADL, and Julia Lawall presented Prequel at the 2016 OSADL
networking day
(<ref xlink:href="https://www.osadl.org/OSADL-Networking-Day-2016.networking-day-2016.0.html" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>www.<allowbreak/>osadl.<allowbreak/>org/<allowbreak/>OSADL-Networking-Day-2016.<allowbreak/>networking-day-2016.<allowbreak/>0.<allowbreak/>html</ref>).</p>
      <simplelist>
        <li id="uid20">
          <p noindent="true">Participants: Julia Lawall and Gilles Muller</p>
        </li>
        <li id="uid21">
          <p noindent="true">Partners: IRILL - LIP6</p>
        </li>
        <li id="uid22">
          <p noindent="true">Contact: Julia Lawall</p>
        </li>
        <li id="uid23">
          <p noindent="true">URL: <ref xlink:href="http://prequel-pql.gforge.inria.fr/" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">http://<allowbreak/>prequel-pql.<allowbreak/>gforge.<allowbreak/>inria.<allowbreak/>fr/</ref></p>
        </li>
      </simplelist>
    </subsection>
    <subsection id="uid24" level="1">
      <bodyTitle>Coccinelle</bodyTitle>
      <p><span class="smallcap" align="left">Keywords:</span> Code quality - Evolution - Infrastructure software</p>
      <p noindent="true">
        <span class="smallcap" align="left">Functional Description</span>
      </p>
      <p>Coccinelle is a tool for C code program matching and transformation that
has been developed by members of the Whisper team over the last 10 years
<ref xlink:href="#whisper-2016-bid4" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. Coccinelle is widely used by the Linux
kernel developer community and for other C software projects. Over the
last three years, Coccinelle has benefited from the support of an engineer
from the SED. Major improvements in 2016 include support for Python 3,
independence from a no-longer-supported interface between Python and OCaml,
better support for parallelism, and better support for integrating
arbitrary predicates into the matching process. These features
significantly improve performance and improve the uniformity of the rule
specification language, thus providing a better experience for users.
Coccinelle is at the foundation of much of our research work, including the
ANR ITrans project, and these improvements will enhance and facilitate our
research, accordingly.</p>
      <p>Coccinelle is publicly available under GPLv2. In 2016, Julia Lawall
presented Coccinelle in an invited keynote at the Linux Security Summit
(<ref xlink:href="http://events.linuxfoundation.org/events/archive/2016/linux-security-summit" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">http://<allowbreak/>events.<allowbreak/>linuxfoundation.<allowbreak/>org/<allowbreak/>events/<allowbreak/>archive/<allowbreak/>2016/<allowbreak/>linux-security-summit</ref>)
and at a “birds of a feather” session at Linuxcon Europe
(<ref xlink:href="http://events.linuxfoundation.org/events/LinuxCon-europe" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">http://<allowbreak/>events.<allowbreak/>linuxfoundation.<allowbreak/>org/<allowbreak/>events/<allowbreak/>LinuxCon-europe</ref>).</p>
      <simplelist>
        <li id="uid25">
          <p noindent="true">Participants: Julia Lawall, Gilles Muller, and Thierry Martinez</p>
        </li>
        <li id="uid26">
          <p noindent="true">Partners: IRILL - LIP6</p>
        </li>
        <li id="uid27">
          <p noindent="true">Contact: Julia Lawall</p>
        </li>
        <li id="uid28">
          <p noindent="true">URL: <ref xlink:href="http://coccinelle.lip6.fr" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">http://<allowbreak/>coccinelle.<allowbreak/>lip6.<allowbreak/>fr</ref></p>
        </li>
      </simplelist>
    </subsection>
    <subsection id="uid29" level="1">
      <bodyTitle>Hector (BtrLinux)</bodyTitle>
      <p><span class="smallcap" align="left">Keywords:</span> Code quality - Evolution - Infrastructure software</p>
      <p noindent="true">
        <span class="smallcap" align="left">Functional Description</span>
      </p>
      <p>A major source of errors in systems code is resource-release omission,
which can lead to memory leaks and to crashes, if the system ends up in
an inconsistent state. Currently, many tools exist that detect common
patterns in software and detect faults as deviations from those patterns,
but most suffer from high rates of false positives. Hector takes the novel
approach of detecting inconsistencies local to a single function, and thus
has been able to find over 300 faults in Linux kernel code and other C
infrastructure software, with a rate of false positives of only 23%.
Hector was originally the subject of the PhD thesis of Suman Saha
<ref xlink:href="#whisper-2016-bid61" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. Over the past two years, improving the
robustness of the implementation of Hector has been the focus of ADT (young
engineer position) BtrLinux supported by Inria, with the goal of making
Hector publicly available and popularizing its use in the Linux kernel
developer community. Some Linux kernel patches based on the use of Hector
have been integrated into the Linux kernel, and the public release of
Hector is in progress. The ADT position also involved the creation and
maintenance of the website <ref xlink:href="https://btrlinux.inria.fr/" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>btrlinux.<allowbreak/>inria.<allowbreak/>fr/</ref> as a showcase
for the work of the Whisper team around Linux kernel development tools.</p>
      <p>Building on his experience acquired in the ADT position, Quentin Lambert
has recently been offered a position as an engineer at Wolfram MathCore AB.</p>
      <simplelist>
        <li id="uid30">
          <p noindent="true">Participants: Quentin Lambert, Julia Lawall, and Gilles Muller</p>
        </li>
        <li id="uid31">
          <p noindent="true">Partners: IRILL - LIP6</p>
        </li>
        <li id="uid32">
          <p noindent="true">Contact: Julia Lawall</p>
        </li>
        <li id="uid33">
          <p noindent="true">URL: <ref xlink:href="https://btrlinux.inria.fr/" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>btrlinux.<allowbreak/>inria.<allowbreak/>fr/</ref></p>
        </li>
      </simplelist>
    </subsection>
    <subsection id="uid34" level="1">
      <bodyTitle>ssrbit</bodyTitle>
      <p>
        <span class="smallcap" align="left">Functional Description</span>
      </p>
      <p>ssrbit is a Coq library offering an efficient formalization of bit
vectors, a refinement framework for abstractly reasoning about
bitsets, and a trustworthy extraction of bit vectors to OCaml
integers. Initially developed by Whisper members (Pierre-Évariste
Dagand, Julia Lawall), the development has attracted an external
contributor (Emilio Jesús Gallego Arias, postdoctoral researcher in
CRI Mines-ParisTech), which led to significant improvements. We plan to
improve the overall support and documentation so as to provide a
full-featured library.</p>
      <simplelist>
        <li id="uid35">
          <p noindent="true">Participants: Pierre Évariste Dagand, Julia Lawall, and Emilio Jesús Gallego Arias</p>
        </li>
        <li id="uid36">
          <p noindent="true">Contact: Pierre Évariste Dagand</p>
        </li>
        <li id="uid37">
          <p noindent="true">URL: <ref xlink:href="https://github.com/ejgallego/ssrbit/" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>github.<allowbreak/>com/<allowbreak/>ejgallego/<allowbreak/>ssrbit/</ref></p>
        </li>
      </simplelist>
    </subsection>
  </logiciels>
  <resultats id="uid38">
    <bodyTitle>New Results</bodyTitle>
    <subsection id="uid39" level="1">
      <bodyTitle>Software engineering for infrastructure
software</bodyTitle>
      <p>Our main work in this area has focused on driver porting. We aim at fully
automating the backporting (or symmetrically forward porting) process:
given any driver for one Linux kernel version, one would like to obtain a
driver that has the same functionality for another kernel version. This
requires identifying the changes that are needed, obtaining examples of how
to carry these changes out, and inferring from these examples a change that
is appropriate for the given driver code. We have carried out a
preliminary study in this direction with David Lo of Singapore Management
University; this work, published at ICSME 2016 <ref xlink:href="#whisper-2016-bid45" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>,
is limited to a port from one version to the next one, in the case where
the amount of change required is limited to a single line of code.</p>
      <p>More general automation of backporting requires more extensive search for
relevant examples. This raises issues of scalability, because the Linux
kernel code history is very large, and of expressivity, because we need to
be able to express complex patterns to obtain change examples that are most
relevant to a particular backporting problem. To this end, we have been
adapted the notation used by Coccinelle, which describes how a change
should be carried out, into a <i>patch query language</i> that allows
describing patterns of changes that have been previously performed. The
associated tool, Prequel, can find patches that match a particular pattern
among several hundred thousand commits, often in tens of
seconds <ref xlink:href="#whisper-2016-bid44" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. This work is supported in part by
OSADL, a consortium of companies, mostly in Germany, supporting the use and
development of open source software in automation and other industries.</p>
      <p>We will continue research in this direction over the next three years as
part of the ANR PRCI ITrans project, awarded in 2016 and to be carried out
in 2017-2020.</p>
    </subsection>
    <subsection id="uid40" level="1">
      <bodyTitle>Developing infrastructure software using Domain Specific Languages</bodyTitle>
      <p>To bootstrap our long-term effort in designing safe and composable
domain-specific languages, we have initiated two exploratory actions
involving a combination of advanced type-theoretic concepts and
domain-specific compilation techniques. Both actions are
complementary, the first adopts a bottom-up approach – going from
low-level artifacts to high-level abstractions – while the second
follows a top-down approach – offering a safe translation of
high-level guarantees to low-level executable code.</p>
      <p>Our first line of inquiry, of which some early results have been
published at FLOPS 2016 <ref xlink:href="#whisper-2016-bid62" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, aims at bridging the
formalization gap between low-level, bit-twiddling code and
high-level, mathematical abstractions. As such, it provided us with an
opportunity to experiment with using an interactive theorem prover to
design abstractions in a bottom-up manner. We have developed a library
(<tt>ssrbit</tt>, publicly available under an open-source license)
for modeling and computing with bit vectors in the
Coq  <ref xlink:href="#whisper-2016-bid63" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> proof assistant. Because ease of proving and
efficiency in computing are often incompatible objectives, this
library offers a two pronged approach by offering an abstract
specification for proving and an efficient implementation for computing;
we have shown that the latter is correct with respect to the
former. Using this model of bit-level operations, we have implemented
a bitset library and proved its correctness with respect to the
formalization of sets of finite types provided by the Ssreflect
library  <ref xlink:href="#whisper-2016-bid64" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, which is part of the Mathematical
Components framework developed at the MSR-Inria joint center. This
library thus enables a seamless interaction of sets for computing and
sets for proving. This library also supports the trustworthy
extraction of bitsets down to OCaml's machine integers: we gained
greater confidence in our model by adopting a methodology based on
exhaustive testing. This enabled us to implement three bit-twiddling
applications in Coq (Bloom filter, <formula type="inline"><math xmlns="http://www.w3.org/1998/Math/MathML" overflow="scroll"><mi>n</mi></math></formula>-queens, and the efficient
enumeration of all k-combinations of a set), prove their correctness
and obtain efficient low-level OCaml code.</p>
      <p>Our second line of inquiry is influenced by the realization that
domain-specific languages are often treating the symptoms rather than
providing a cure. Infrastructure software is often developed in C,
which suffers from many semantic kludges and is, as a result, hardly
amenable to formal reasoning. Many domain-specific languages are born
out of the frustration of being unable to guarantee static properties of
one's code: more often than not, the resulting language is little more
than a domain-specific variant of Pascal supporting custom static
analyses and some form of transliteration to C. To achieve safety and
composability, we believe that a more holistic approach is called for,
involving not only the design of a domain-specific <i>syntax</i> but
also of a domain-specific <i>semantics</i>. Concretely, we are
exploring the design of <i>certified domain-specific compilers</i>
that integrate, from the ground up, a denotational and domain-specific
semantics as part of the design of a domain-specific language.
This vision is illustrated by our work on the safe compilation of Coq
programs into secure OCaml code <ref xlink:href="#whisper-2016-bid65" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid66" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. It
combines ideas from gradual typing – through which types are compiled
into run-time assertions – and the theory of
ornaments  <ref xlink:href="#whisper-2016-bid67" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> – through which Coq datatypes can be
related to OCaml datatypes. Within this formal framework, we enable a
secure interaction, termed <i>dependent interoperability</i>, between
correct-by-construction software and untrusted programs, be it system
calls or legacy libraries. To do so, we trade static guarantees for
runtime checks, thus allowing OCaml values to be safely coerced to
dependently-typed Coq values and, conversely, to expose
dependently-typed Coq programs defensively as OCaml programs. Our
framework is developed in Coq: it is constructive and verified in the
strictest sense of the terms. It thus becomes possible to internalize
and hand-tune the extraction of dependently-typed programs to
interoperable OCaml programs within Coq itself. This work is part of
a collaboration with Eric Tanter, from the University of Chile, and
Nicolas Tabareau, from the Ascola Inria project-team.</p>
      <p>To further explore the realm of domain-specific compilers, we have
been involved in the design and implementation of a certified compiler
for the Lustre  <ref xlink:href="#whisper-2016-bid68" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> synchronous dataflow
language. Synchronous dataflow languages are widely used for the
design of embedded systems: they allow a high-level description of the
system and naturally lend themselves to a hierarchical design. This
on-going work, in collaboration with members of the Parkas team and
Gallium team of Inria Paris, formalizes the compilation of a
synchronous data-flow language into an imperative sequential language,
which is eventually translated to Cminor  <ref xlink:href="#whisper-2016-bid69" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>,
one of CompCert's intermediate languages. This project illustrates
perfectly our methodological position: the design of synchronous
dataflow languages is first governed by semantic considerations (Kahn
process networks and the synchrony hypothesis) that are then reifed
into syntactic artefacts. The implementation of a certified compiler
highlights this dependency on semantics, forcing us to give as crisp a
semantics as possible for the proof effort to be manageable. This work
is part of an on-going collaboration with Marc Pouzet and Tim Bourke,
from the Parkas team of Inria Paris, Lionel Rieg, postdoc at Collège
de France, and Xavier Leroy, from the Gallium Inria project-team.</p>
      <p>In terms of DSL design for domains where correctness is critical, our
current focus is on process scheduling and multicore architectures.
Ten years ago, we developed Bossa, targeting process scheduling on
unicore processors, and primarily focusing on the correctness of a
scheduling policy with respect to the requirements of the target
kernel. At that time, the main use cases were soft real-time
applications, such as video playback. Bossa was and still continues
to be used in teaching, because the associated verifications allow a
student to develop a kernel-level process scheduling policy without
the risk of a kernel crash. Today, however, there is again a need for
the development of new scheduling policies, now targeting multicore
architectures. As identified by Lozi <i>et
al.</i>  <ref xlink:href="#whisper-2016-bid70" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, large-scale server applications,
having specific resource access properties, can exhibit pathological
properties when run with the Linux kernel's various load balancing
heuristics. We are working on a new domain-specific language,
Ipanema, to allow expressing load balancing properties, and to enable
verification of critical scheduling properties such as liveness; for
the latter, we are exploring the use of tools such as the Z3 theorem
prover from Microsoft, and the Leon theorem prover from EPFL. A first
version of the language has been designed and we expect to have a
prototype of Ipanema working next year. The work around Ipanema is the
subject of a very active collaboration between researchers at four
institutions (Inria, University of Nice, University of Grenoble, and
EPFL (groups of V. Kuncak and W. Zwaenepoel)). Baptiste Lepers (EPFL)
will be supported in 2017 as a postdoc as part of the Inria-EPFL joint
laboratory.</p>
      <p>Finally, in the context of the Multicore IPL, we are working with Jens
Gustedt and Mariem Saeid of the Inria Camus project-team on developing a
domain-specific language that eases programming with the ordered
read-write lock (ORWL) execution model. The goal of this work is to
provide a single execution model for parallel programs and to allow
them to be deployed on multicore machines with varying
architectures <ref xlink:href="#whisper-2016-bid71" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>.</p>
    </subsection>
    <subsection id="uid41" level="1">
      <bodyTitle>Run-time environments for multicore architectures</bodyTitle>
      <p>In the recent past, we acquired a solid expertise in multicore systems
through the PhD of Jean-Pierre Lozi <ref xlink:href="#whisper-2016-bid72" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> and
Florian David <ref xlink:href="#whisper-2016-bid73" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. This expertise has led
us to initiate several collaborations with industry partners, in the
form of CIFRE PhD support. We first targeted real-time multicore
systems with the goal of improving resource usage, through a
cooperation with Renault and the PhD of Antoine Blin. Recently, we
have started another cooperation on multicore real-time systems for
avionics and space with Thales TRT, that is the topic of the PhD of
Cédric Courtaud.</p>
      <p>The PhD of Jean-Pierre Lozi <ref xlink:href="#whisper-2016-bid72" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/> was on improving the
performance locks on large multicore architectures. In an paper published
at Usenix ATC 2012 <ref xlink:href="#whisper-2016-bid74" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, and more recently in an
article published in 2016 in ACM Transactions on Computer Systems
(TOCS) <ref xlink:href="#whisper-2016-bid43" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, we proposed a new locking technique,
Remote Core Locking (RCL), that aims to accelerate the execution of
critical sections in legacy applications on multicore architectures. RCL is
currently one of the most efficient locking technique and the ATC 2012
paper has currently 67 citations on Google scholar. The idea of RCL is to
replace lock acquisitions by optimized remote procedure calls to a
dedicated server hardware thread. RCL limits the performance collapse
observed with other lock algorithms when many threads try to acquire a lock
concurrently and removes the need to transfer lock-protected shared data to
the hardware thread acquiring the lock because such data can typically
remain in the server's cache. Eighteen applications were used to evaluate
RCL from standard multicore benchmark suites, such as SPLASH-2 and Phoenix
2. By using RCL instead of Linux POSIX locks, performance is improved by
up to 2.5 times on Memcached, and up to 11.6 times on Berkeley DB with the
TPC-C client. On a SPARC machine with two Sun Ultrasparc T2+ processors
and 128 hardware threads, performance is improved by up to 1.3 times with
respect to Solaris POSIX locks on Memcached, and up to 7.9 times on
Berkeley DB with the TPC-C client.</p>
      <p>The PhD of Antoine Blin is on modern complex embedded systems that involve
a mix of real-time and best-effort applications. The recent emergence of
low-cost multicore processors raises the possibility of running both kinds
of applications on a single machine, with virtualization ensuring
isolation. Nevertheless, memory contention can introduce other sources of
delay, that can lead to missed deadlines. We first investigated the source
of memory contention for the Mibench benchmark in a paper published at
NETYS 2016 <ref xlink:href="#whisper-2016-bid75" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>. Then, in a paper published at ECRTS
2016 <ref xlink:href="#whisper-2016-bid76" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, we present a combined offline/online memory
bandwidth monitoring approach. Our approach estimates and limits the
impact of the memory contention incurred by the best-effort applications on
the execution time of the real-time application. Using our approach, the
system designer can limit the overhead on the real-time application to
under 5% of its expected execution time, while still enabling progress of
the best-effort applications.</p>
    </subsection>
  </resultats>
  <contrats id="uid42">
    <bodyTitle>Bilateral Contracts and Grants with Industry</bodyTitle>
    <subsection id="uid43" level="1">
      <bodyTitle>Bilateral Contracts with Industry</bodyTitle>
      <simplelist>
        <li id="uid44">
          <p noindent="true">Renault, 2014-2016, 45 000 euros. The purpose of this contract
is to develop solutions for running a mix of real-time and best-effort
applications on a small embedded multicore architecture. Our goal is
to optimize the usage of the processor resource. The PhD of Antoine
Blin is supported by a CIFRE fellowship with Renault.</p>
        </li>
        <li id="uid45">
          <p noindent="true">Orange Labs, 2016-2017, 60 000 euros. The purpose of this contract is
to apply the techniques developed in the context of the PhD of Antoine
Blin to the domain of Software Defined Networks where network
functions are run using virtual machines on commodity multicore
machines.</p>
        </li>
        <li id="uid46">
          <p noindent="true">Thales Research, 2016-2018, 45 000 euros. The purpose of this
contract is to enable the usage of multicore architectures in avionics
systems. More precisely, our goal is to develop optimizations for a
software TDMA hypervisor developed by Thales that provides full
time-isolation of tasks. The PhD of Cédric Courtaud is supported by a
CIFRE fellowship with Thales Research.</p>
        </li>
        <li id="uid47">
          <p noindent="true">OSADL, 2016-2017, development of the Prequel patch query language, 20
000 euros. OSADL is an organization headquartered in Germany that
promotes and supports the use of open source software in the automation
and machine industry. The project is in the context of the OSADL project
SIL2LinuxMP bringing together various companies in automotive and
embedded sytems with the goal of developing methodologies for certifying
the basic components of a GNU/Linux-based RTOS.</p>
        </li>
      </simplelist>
    </subsection>
  </contrats>
  <partenariat id="uid48">
    <bodyTitle>Partnerships and Cooperations</bodyTitle>
    <subsection id="uid49" level="1">
      <bodyTitle>Regional Initiatives</bodyTitle>
      <simplelist>
        <li id="uid50">
          <p noindent="true">City of Paris, 2016-2019, 100 000 euros. As part of the
“Émergence - young team” program the city of Paris is supporting
part of our work on domain-specific languages.</p>
        </li>
      </simplelist>
    </subsection>
    <subsection id="uid51" level="1">
      <bodyTitle>National Initiatives</bodyTitle>
      <subsection id="uid52" level="2">
        <bodyTitle>ANR</bodyTitle>
        <sanspuceslist>
          <li id="uid53">
            <p noindent="true"><b>ITrans</b> - awarded in 2016, duration 2017 - 2020</p>
          </li>
          <li id="uid54">
            <p noindent="true">Members: LIP6 (Whisper), David Lo (Singapore Management University)</p>
          </li>
          <li id="uid55">
            <p noindent="true">Coordinator: Julia Lawall</p>
          </li>
          <li id="uid56">
            <p noindent="true">Whisper members: Julia Lawall, Gilles Muller</p>
          </li>
          <li id="uid57">
            <p noindent="true">Funding: ANR PRCI, 287,820 euros.</p>
          </li>
          <li id="uid58">
            <p noindent="true">Objectives:</p>
            <p>Large, real-world software must continually change, to keep up with
evolving requirements, fix bugs, and improve performance, maintainability,
and security. This rate of change can pose difficulties for clients, whose
code cannot always evolve at the same rate. This project will target the
problems of <i>forward porting</i>, where one software component has to
catch up to a code base with which it needs to interact, and <i>back
porting</i>, in which it is desired to use a more modern component in a
context where it is necessary to continue to use a legacy code base,
focusing on the context of Linux device drivers. In this project, we will
take a <i>history-guided source-code transformation-based</i> approach,
which automatically traverses the history of the changes made to a software
system, to find where changes in the code to be ported are required,
gathers examples of the required changes, and generates change rules to
incrementally back port or forward port the code. Our approach will be a
success if it is able to automatically back and forward port a large number
of drivers for the Linux operating system to various earlier and later
versions of the Linux kernel with high accuracy while requiring minimal
developer effort. This objective is not achievable by existing techniques.</p>
          </li>
        </sanspuceslist>
        <p spacebefore="0.0pt"/>
        <sanspuceslist>
          <li id="uid59">
            <p noindent="true"><b>Chronos network, Time and Events in Computer Science, Control
Theory, Signal Processing, Computer Music, and Computational
Neurosciences and Biology</b> - (2015 - 2016)</p>
          </li>
          <li id="uid60">
            <p noindent="true">Coordinator: Gerard Berry</p>
          </li>
          <li id="uid61">
            <p noindent="true">Whisper member: Gilles Muller</p>
          </li>
          <li id="uid62">
            <p noindent="true">Funding: ANR 2014, Défi “Société de l'information
et de la communication”.</p>
            <p>The Chronos interdisciplinary network aims at placing in close contact
and cooperation researchers of a variety of scientific fields:
computer science, control theory, signal processing, computer music,
neurosciences, and computational biology. The scientific object of
study will be the understanding, modeling, and handling of time- and
event-based computation across the fields.</p>
            <p>Chronos will work by organizing a regular global seminar on subjects
ranging from open questions to concrete solutions in the research
fields, workshops gathering subsets of the Chronos researchers to
address specific issues more deeply, a final public symposium
presenting the main contributions and results, and an associated
compendium.</p>
          </li>
        </sanspuceslist>
      </subsection>
      <subsection id="uid63" level="2">
        <bodyTitle>Multicore Inria Project Lab</bodyTitle>
        <p>The Multicore IPL is an Inria initiative, led by Gilles Muller, whose goal
is to develop techniques for deploying parallel programs on heterogeneous
multicore machines while preserving scalability and performance. The IPL
brings together researchers from the ALF, Algorille, CAMUS, Compsys, DALI,
REGAL, Runtime and Whisper Inria Teams. These connections provide access
to a diversity of expertise on open source development and parallel
computing, respectively. In this context, Gilles Muller and Julia Lawall
are working with Jens Gustedt and Mariem Saeid of Inria Lorraine on
developing a domain-specific language that eases programming with the
ordered read-write lock (ORWL) execution model. The goal of this work is to
provide a single execution model for parallel programs and to allow them to be
deployed on multicore machines with varying architectures.</p>
      </subsection>
    </subsection>
    <subsection id="uid64" level="1">
      <bodyTitle>International Initiatives</bodyTitle>
      <subsection id="uid65" level="2">
        <bodyTitle>Inria International Partners</bodyTitle>
        <subsection id="uid66" level="3">
          <bodyTitle>Informal International Partners</bodyTitle>
          <p>We collaborate with David Lo and Lingxiao Jiang of Singapore
Management University, who are experts in software mining, clone
detection, and information retrieval techniques. Our work with Lo
and/or Jiang has led to 7 joint publications since 2013
<ref xlink:href="#whisper-2016-bid77" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid78" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid79" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid80" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid81" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid82" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>, <ref xlink:href="#whisper-2016-bid83" location="biblio" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest"/>,
at conferences including ASE and ICSME.</p>
        </subsection>
      </subsection>
    </subsection>
    <subsection id="uid67" level="1">
      <bodyTitle>International Research Visitors</bodyTitle>
      <subsection id="uid68" level="2">
        <bodyTitle>Visits of International Scientists</bodyTitle>
        <subsection id="uid69" level="3">
          <bodyTitle>Internships</bodyTitle>
          <p>Natacha Crooks, PhD student at the University of Austin, Texas, spent
three months in Whisper from May to August working on Ipanema.</p>
          <p>Derek Palinski, undergraduate at Oberlin College, USA, spent January and
June to August working on understanding of device driver evolution,
including the evaluation of Prequel.</p>
          <p>Vatika Harlalka, undergraduate at the International Institute of
Information Technology - Hyderabad, India, spent May to July working on
strategies for improving the performance of multicore real-time systems.</p>
          <p>Denis Merigoux, final-year student from Ecole Polytechnique, spent
March to August working on inference of Coccinelle semantic patches from
examples.</p>
          <p>Roman Delgado, undergraduate at UPMC, spent June to August working
with Pierre-Évariste Dagand on implementing dependent induction in
type theory.</p>
          <p>Swaraj Dash, undergraduate at Cambridge University, spent August to
September working with Pierre-Évariste Dagand on the derivative of
indexed datatypes.</p>
          <p>Redha Gouicem, Master 2 at UPMC, spent March to August working on
memory access control for multicore real-time systems.</p>
          <p>Axelle Piot, Master 2 at ENS, spent March to July working on Ipanema.</p>
        </subsection>
      </subsection>
    </subsection>
  </partenariat>
  <diffusion id="uid70">
    <bodyTitle>Dissemination</bodyTitle>
    <subsection id="uid71" level="1">
      <bodyTitle>Promoting Scientific Activities</bodyTitle>
      <subsection id="uid72" level="2">
        <bodyTitle>Scientific Events Selection</bodyTitle>
        <subsection id="uid73" level="3">
          <bodyTitle>Member of the Conference Program Committees</bodyTitle>
          <simplelist>
            <li id="uid74">
              <p noindent="true">Pierre-Évariste Dagand: TyDe 2016 PC.</p>
            </li>
            <li id="uid75">
              <p noindent="true">Julia Lawall:
FLOPS 2016 PC, PLDI 2016 EPC, LCTES 2016 PC, OOPSLA 2016 PC, ASE 2016 ERP,
Middleware 2016 PC, GPCE 2016 PC, SLE 2016 PC, ICSME 2016 ERA.</p>
            </li>
            <li id="uid76">
              <p noindent="true">Gilles Muller: EDCC 2016 PC, OPODIS 2016 PC, DSN 2016 PC, ASPLOS 2016 PC.</p>
            </li>
          </simplelist>
        </subsection>
      </subsection>
      <subsection id="uid77" level="2">
        <bodyTitle>Journal</bodyTitle>
        <subsection id="uid78" level="3">
          <bodyTitle>Member of the Editorial Boards</bodyTitle>
          <simplelist>
            <li id="uid79">
              <p noindent="true">Julia Lawall: Editorial board of Science of Computer Programing
(2008 - present).</p>
            </li>
          </simplelist>
        </subsection>
        <subsection id="uid80" level="3">
          <bodyTitle>Reviewer - Reviewing Activities</bodyTitle>
          <simplelist>
            <li id="uid81">
              <p noindent="true">Pierre-Évariste Dagand: Journal of Logical and Algebraic
Methods in Programming (journal), Journal of Functional Programming
(journal), Type-driven Development (workshop)</p>
            </li>
            <li id="uid82">
              <p noindent="true">Julia Lawall: Automated Software Engineering (journal).</p>
            </li>
            <li id="uid83">
              <p noindent="true">Gilles Muller: IEEE Transactions on Computers, Operating Systems Review.</p>
            </li>
          </simplelist>
        </subsection>
      </subsection>
      <subsection id="uid84" level="2">
        <bodyTitle>Invited Talks</bodyTitle>
        <simplelist>
          <li id="uid85">
            <p noindent="true">Julia Lawall: PPL workshop (Japan) 2016, Linux Security Summit 2016,
SPLASH 2016 Programming Languages Mentoring Workshop, IFIP WG 2.4
(Software Implementation Technology).</p>
          </li>
        </simplelist>
      </subsection>
      <subsection id="uid86" level="2">
        <bodyTitle>Research Administration</bodyTitle>
        <simplelist>
          <li id="uid87">
            <p noindent="true">Pierre-Évariste Dagand:
Member of the steering committee for the Colloquium d'Informatique de L'UPMC Sorbonne Universités</p>
          </li>
          <li id="uid88">
            <p noindent="true">Julia Lawall:
IFIP TC secretary (2012 - present).</p>
            <p>Hiring committees:
Inria Paris (CR2, 2016), Bordeaux (MdC, 2016), CNAM (MdC, 2016)</p>
          </li>
          <li id="uid89">
            <p noindent="true">Gilles Muller: EuroSys steering committee (2013-2016), elected
member of WG 10.4 (Dependability), representative of Inria in
Sorbonne University's advisory committee for research, member
of the project committee board of the Inria Paris Center, member
of the Paris committee for allocating post-docs, PhD stipends and sabbaticals.</p>
          </li>
          <li id="uid90">
            <p noindent="true">Bertil Folliot: Elected member of the IFIP WG10.3 working group (Concurrent systems)</p>
          </li>
        </simplelist>
      </subsection>
    </subsection>
    <subsection id="uid91" level="1">
      <bodyTitle>Teaching - Supervision - Juries</bodyTitle>
      <subsection id="uid92" level="2">
        <bodyTitle>Teaching</bodyTitle>
        <simplelist>
          <li id="uid93">
            <p noindent="true">Licence: Pierre-Évariste Dagand, Distributed cooperating objects, L3, UPMC, France</p>
          </li>
          <li id="uid94">
            <p noindent="true">Professional Licence: Bertil Folliot, Programmation C, L2, UPMC, France</p>
          </li>
          <li id="uid95">
            <p noindent="true">Professional Licence: Bertil Folliot, Lab projects, L2, UPMC, France</p>
          </li>
        </simplelist>
      </subsection>
      <subsection id="uid96" level="2">
        <bodyTitle>Supervision</bodyTitle>
        <simplelist>
          <li id="uid97">
            <p noindent="true">PhD in progress : Antoine Blin, CIFRE Renault, Vers une utilisation efficace des multi-coeurs dans des systèmes embarqués à criticités multiples, 30 Janvier 2017, Gilles Muller, Julien Sopéna (Regal)</p>
          </li>
          <li id="uid98">
            <p noindent="true">PhD in progress : Mariem Saeid, Jens Gustedt (Camus), soutenance en 2017, Gilles Muller.</p>
          </li>
          <li id="uid99">
            <p noindent="true">PhD in progress : Cédric Courtaud, CIFRE Thalès, 2016-2018, Gilles Muller, Julien Sopéna (Regal).</p>
          </li>
          <li id="uid100">
            <p noindent="true">PhD in progress : Redha Gouicem, 2016-2018, Gilles Muller, Julien Sopéna (Regal).</p>
          </li>
        </simplelist>
      </subsection>
      <subsection id="uid101" level="2">
        <bodyTitle>Juries</bodyTitle>
        <simplelist>
          <li id="uid102">
            <p noindent="true">Pierre-Évariste Dagand: member of the Jury of Mahsa Najafzadeh (UPMC)</p>
          </li>
          <li id="uid103">
            <p noindent="true">Julia Lawall: PhD reporter for Pierre Wilke (Rennes), Alan
Charpentier (Bordeaux), Guido Lena Cota (Milan, defense in 2017),
Krishna Narasimhan (Frankfurt, defense in 2017). PhD jury for Ripon
Saha (UT Austin).</p>
          </li>
          <li id="uid104">
            <p noindent="true">Gilles Muller: President of the PhD thesis of T. Tigori (U. of Nantes), Member of the Jury of V. Trigonakis (EPFL, Switzerland), Reporter of the PhD of A. Walker (U. of New South Wales, Australia).</p>
          </li>
        </simplelist>
      </subsection>
    </subsection>
    <subsection id="uid105" level="1">
      <bodyTitle>Popularization</bodyTitle>
      <subsection id="idp4267088" level="2">
        <bodyTitle>Talks</bodyTitle>
        <simplelist>
          <li id="uid106">
            <p noindent="true">Julia Lawall: Coccinelle: invited talk, Linux Security Summit, 2016.</p>
          </li>
          <li id="uid107">
            <p noindent="true">Julia Lawall: Coccinelle BoF: Linuxcon Europe 2016.</p>
          </li>
          <li id="uid108">
            <p noindent="true">Julia Lawall: Outreachy intern panel, Linuxcon Europe 2016.</p>
          </li>
          <li id="uid109">
            <p noindent="true">Julia Lawall: Prequel, 2016 OSADL networking day.</p>
          </li>
        </simplelist>
      </subsection>
    </subsection>
  </diffusion>
  <biblio id="bibliography" html="bibliography" numero="10" titre="Bibliography">
    
    <biblStruct id="whisper-2016-bid3" type="inproceedings" rend="refer" n="refercite:Brunel:POPL09">
      <analytic>
        <title level="a">A foundation for flow-based program matching using temporal logic and model checking</title>
        <author>
          <persName>
            <foreName>Julien</foreName>
            <surname>Brunel</surname>
            <initial>J.</initial>
          </persName>
          <persName key="gallium-2014-idm26976">
            <foreName>Damien</foreName>
            <surname>Doligez</surname>
            <initial>D.</initial>
          </persName>
          <persName>
            <foreName>René Rydhof</foreName>
            <surname>Hansen</surname>
            <initial>R. R.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">POPL</title>
        <loc>Savannah, GA, USA</loc>
        <imprint>
          <publisher>
            <orgName>ACM</orgName>
          </publisher>
          <dateStruct>
            <month>January</month>
            <year>2009</year>
          </dateStruct>
          <biblScope type="pages">114–126</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid87" type="article" rend="refer" n="refercite:Burgy:TSE11">
      <analytic>
        <title level="a">Zebu: A Language-Based Approach for Network Protocol Message Processing</title>
        <author>
          <persName>
            <foreName>Laurent</foreName>
            <surname>Burgy</surname>
            <initial>L.</initial>
          </persName>
          <persName>
            <foreName>Laurent</foreName>
            <surname>Réveillère</surname>
            <initial>L.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="j">IEEE Trans. Software Eng.</title>
        <imprint>
          <biblScope type="volume">37</biblScope>
          <biblScope type="number">4</biblScope>
          <dateStruct>
            <year>2011</year>
          </dateStruct>
          <biblScope type="pages">575-591</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid26" type="inproceedings" rend="refer" n="refercite:dagand:fof">
      <analytic>
        <title level="a">Filet-o-Fish: practical and dependable domain-specific languages for OS development</title>
        <author>
          <persName key="gallium-2014-idp75592">
            <foreName>Pierre-Évariste</foreName>
            <surname>Dagand</surname>
            <initial>P.-É.</initial>
          </persName>
          <persName>
            <foreName>Andrew</foreName>
            <surname>Baumann</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>Timothy</foreName>
            <surname>Roscoe</surname>
            <initial>T.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">Programming Languages and Operating Systems (PLOS)</title>
        <imprint>
          <dateStruct>
            <year>2009</year>
          </dateStruct>
          <biblScope type="pages">51–55</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid34" type="inproceedings" rend="refer" n="refercite:kennedy:coqasm">
      <analytic>
        <title level="a">Coq: The World's Best Macro Assembler?</title>
        <author>
          <persName>
            <foreName>Andrew</foreName>
            <surname>Kennedy</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>Nick</foreName>
            <surname>Benton</surname>
            <initial>N.</initial>
          </persName>
          <persName>
            <foreName>Jonas B.</foreName>
            <surname>Jensen</surname>
            <initial>J. B.</initial>
          </persName>
          <persName key="gallium-2014-idp75592">
            <foreName>Pierre-Évariste</foreName>
            <surname>Dagand</surname>
            <initial>P.-É.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">PPDP</title>
        <loc>Madrid, Spain</loc>
        <imprint>
          <publisher>
            <orgName>ACM</orgName>
          </publisher>
          <dateStruct>
            <year>2013</year>
          </dateStruct>
          <biblScope type="pages">13–24</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid6" type="inproceedings" rend="refer" n="refercite:Merillon-al:osdi2000">
      <analytic>
        <title level="a">Devil: An IDL for hardware programming</title>
        <author>
          <persName>
            <foreName>Fabrice</foreName>
            <surname>Mérillon</surname>
            <initial>F.</initial>
          </persName>
          <persName>
            <foreName>Laurent</foreName>
            <surname>Réveillère</surname>
            <initial>L.</initial>
          </persName>
          <persName key="phoenix-2014-idp100688">
            <foreName>Charles</foreName>
            <surname>Consel</surname>
            <initial>C.</initial>
          </persName>
          <persName>
            <foreName>Renaud</foreName>
            <surname>Marlet</surname>
            <initial>R.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">Proceedings of the Fourth Symposium on Operating Systems Design and Implementation (OSDI)</title>
        <loc>San Diego, California</loc>
        <imprint>
          <publisher>
            <orgName>USENIX Association</orgName>
          </publisher>
          <dateStruct>
            <month>October</month>
            <year>2000</year>
          </dateStruct>
          <biblScope type="pages">17–30</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid23" type="inproceedings" rend="refer" n="refercite:muller:sigops:dsls">
      <analytic>
        <title level="a">Towards Robust OSes for Appliances: A New Approach Based on Domain-specific Languages</title>
        <author>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
          <persName key="phoenix-2014-idp100688">
            <foreName>Charles</foreName>
            <surname>Consel</surname>
            <initial>C.</initial>
          </persName>
          <persName>
            <foreName>Renaud</foreName>
            <surname>Marlet</surname>
            <initial>R.</initial>
          </persName>
          <persName>
            <foreName>Luciano P.</foreName>
            <surname>Barreto</surname>
            <initial>L. P.</initial>
          </persName>
          <persName>
            <foreName>Fabrice</foreName>
            <surname>Mérillon</surname>
            <initial>F.</initial>
          </persName>
          <persName>
            <foreName>Laurent</foreName>
            <surname>Réveillère</surname>
            <initial>L.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">Proceedings of the 9th Workshop on ACM SIGOPS European Workshop: Beyond the PC: New Challenges for the Operating System</title>
        <loc>Kolding, Denmark</loc>
        <imprint>
          <dateStruct>
            <year>2000</year>
          </dateStruct>
          <biblScope type="pages">19–24</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid7" type="inproceedings" rend="refer" n="refercite:Muller:HASE05">
      <analytic>
        <title level="a">A Framework for Simplifying the Development of Kernel Schedulers: Design and Performance Evaluation</title>
        <author>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName>
            <foreName>Hervé</foreName>
            <surname>Duchesne</surname>
            <initial>H.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">HASE - High Assurance Systems Engineering Conference</title>
        <loc>Heidelberg, Germany</loc>
        <imprint>
          <publisher>
            <orgName>IEEE</orgName>
          </publisher>
          <dateStruct>
            <month>October</month>
            <year>2005</year>
          </dateStruct>
          <biblScope type="pages">56–65</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid4" type="inproceedings" rend="refer" n="refercite:Padioleau:eurosys08">
      <analytic>
        <title level="a">Documenting and Automating Collateral Evolutions in Linux Device Drivers</title>
        <author>
          <persName>
            <foreName>Yoann</foreName>
            <surname>Padioleau</surname>
            <initial>Y.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName>
            <foreName>René Rydhof</foreName>
            <surname>Hansen</surname>
            <initial>R. R.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">EuroSys</title>
        <loc>Glasgow, Scotland</loc>
        <imprint>
          <dateStruct>
            <month>March</month>
            <year>2008</year>
          </dateStruct>
          <biblScope type="pages">247–260</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid5" type="article" rend="refer" n="refercite:Palix:TOCS14">
      <analytic>
        <title level="a">Faults in Linux 2.6</title>
        <author>
          <persName>
            <foreName>Nicolas</foreName>
            <surname>Palix</surname>
            <initial>N.</initial>
          </persName>
          <persName key="whisper-2014-idp68048">
            <foreName>Gaël</foreName>
            <surname>Thomas</surname>
            <initial>G.</initial>
          </persName>
          <persName>
            <foreName>Suman</foreName>
            <surname>Saha</surname>
            <initial>S.</initial>
          </persName>
          <persName key="pareo-2014-idp68800">
            <foreName>Christophe</foreName>
            <surname>Calvès</surname>
            <initial>C.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="j">ACM Transactions on Computer Systems</title>
        <imprint>
          <biblScope type="volume">32</biblScope>
          <biblScope type="number">2</biblScope>
          <dateStruct>
            <month>June</month>
            <year>2014</year>
          </dateStruct>
          <biblScope type="pages">4:1–4:40</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid43" type="article" rend="year" n="cite:lozi:hal-01252167">
      <identifiant type="doi" value="10.1145/2845079"/>
      <identifiant type="hal" value="hal-01252167"/>
      <analytic>
        <title level="a">Fast and Portable Locking for Multicore Architectures</title>
        <author>
          <persName>
            <foreName>Jean-Pierre</foreName>
            <surname>Lozi</surname>
            <initial>J.-P.</initial>
          </persName>
          <persName key="whisper-2014-idp75720">
            <foreName>Florian</foreName>
            <surname>David</surname>
            <initial>F.</initial>
          </persName>
          <persName key="whisper-2014-idp68048">
            <foreName>Gaël</foreName>
            <surname>Thomas</surname>
            <initial>G.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-editorial-board="yes" x-international-audience="yes" id="rid00019">
        <idno type="issn">0734-2071</idno>
        <title level="j">ACM Transactions on Computer Systems</title>
        <imprint>
          <dateStruct>
            <month>January</month>
            <year>2016</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-01252167" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01252167</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid76" type="inproceedings" rend="year" n="cite:blin:hal-01346979">
      <identifiant type="hal" value="hal-01346979"/>
      <analytic>
        <title level="a">Maximizing Parallelism without Exploding Deadlines in a Mixed Criticality Embedded System</title>
        <author>
          <persName key="whisper-2014-idp74488">
            <foreName>Antoine</foreName>
            <surname>Blin</surname>
            <initial>A.</initial>
          </persName>
          <persName key="whisper-2016-idp25888">
            <foreName>Cédric</foreName>
            <surname>Courtaud</surname>
            <initial>C.</initial>
          </persName>
          <persName key="regal-2014-idp72272">
            <foreName>Julien</foreName>
            <surname>Sopena</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">28th EUROMICRO Conference on Real-Time Systems (ECRTS'16)</title>
        <loc>Toulouse, France</loc>
        <imprint>
          <dateStruct>
            <month>July</month>
            <year>2016</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-01346979" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01346979</ref>
        </imprint>
        <meeting id="cid64606">
          <title>Euromicro Conference on Real-Time Systems</title>
          <num>28</num>
          <abbr type="sigle">ECRTS</abbr>
        </meeting>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid75" type="inproceedings" rend="year" n="cite:blin:hal-01349421">
      <identifiant type="hal" value="hal-01349421"/>
      <analytic>
        <title level="a">Understanding the Memory Consumption of the MiBench Embedded Benchmark</title>
        <author>
          <persName key="whisper-2014-idp74488">
            <foreName>Antoine</foreName>
            <surname>Blin</surname>
            <initial>A.</initial>
          </persName>
          <persName key="whisper-2016-idp25888">
            <foreName>Cédric</foreName>
            <surname>Courtaud</surname>
            <initial>C.</initial>
          </persName>
          <persName key="regal-2014-idp72272">
            <foreName>Julien</foreName>
            <surname>Sopena</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">Netys</title>
        <loc>Marakech, Morocco</loc>
        <imprint>
          <dateStruct>
            <month>May</month>
            <year>2016</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-01349421" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01349421</ref>
        </imprint>
        <meeting id="cid624023">
          <title>International Conference on NETworked sYStems</title>
          <num>2013</num>
          <abbr type="sigle">NETYS</abbr>
        </meeting>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid62" type="inproceedings" rend="year" n="cite:blot:hal-01251943">
      <identifiant type="hal" value="hal-01251943"/>
      <analytic>
        <title level="a">From Sets to Bits in Coq</title>
        <author>
          <persName>
            <foreName>Arthur</foreName>
            <surname>Blot</surname>
            <initial>A.</initial>
          </persName>
          <persName key="gallium-2014-idp75592">
            <foreName>Pierre-Évariste</foreName>
            <surname>Dagand</surname>
            <initial>P.-É.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">FLOPS 2016</title>
        <loc>Kochi, Japan</loc>
        <imprint>
          <dateStruct>
            <month>March</month>
            <year>2016</year>
          </dateStruct>
          <ref xlink:href="https://hal.archives-ouvertes.fr/hal-01251943" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>archives-ouvertes.<allowbreak/>fr/<allowbreak/>hal-01251943</ref>
        </imprint>
        <meeting id="cid315010">
          <title>International Symposium on Functional and Logic Programming</title>
          <num>2016</num>
          <abbr type="sigle">FLOPS</abbr>
        </meeting>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid66" type="inproceedings" rend="year" n="cite:bourke:hal-01403830">
      <identifiant type="hal" value="hal-01403830"/>
      <analytic>
        <title level="a">Vérification de la génération modulaire du code impératif pour Lustre</title>
        <author>
          <persName key="parkas-2014-idp14504">
            <foreName>Timothy</foreName>
            <surname>Bourke</surname>
            <initial>T.</initial>
          </persName>
          <persName key="gallium-2014-idp75592">
            <foreName>Pierre-Evariste</foreName>
            <surname>Dagand</surname>
            <initial>P.-E.</initial>
          </persName>
          <persName key="parkas-2014-idp13232">
            <foreName>Marc</foreName>
            <surname>Pouzet</surname>
            <initial>M.</initial>
          </persName>
          <persName>
            <foreName>Lionel</foreName>
            <surname>Rieg</surname>
            <initial>L.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="no" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">JFLA 2017 - Vingt-huitième Journées Francophones des Langages Applicatifs</title>
        <loc>Gourettes, France</loc>
        <imprint>
          <dateStruct>
            <month>January</month>
            <year>2017</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-01403830" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01403830</ref>
        </imprint>
        <meeting id="cid344980">
          <title>Journées Francophones des Langages Applicatifs</title>
          <num>28</num>
          <abbr type="sigle">JFLA</abbr>
        </meeting>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid65" type="inproceedings" rend="year" n="cite:dagand:hal-01328012">
      <identifiant type="doi" value="10.1145/2951913.2951933"/>
      <identifiant type="hal" value="hal-01328012"/>
      <analytic>
        <title level="a">Partial Type Equivalences for Verified Dependent Interoperability</title>
        <author>
          <persName key="gallium-2014-idp75592">
            <foreName>Pierre-Evariste</foreName>
            <surname>Dagand</surname>
            <initial>P.-E.</initial>
          </persName>
          <persName key="ascola-2014-idp66408">
            <foreName>Nicolas</foreName>
            <surname>Tabareau</surname>
            <initial>N.</initial>
          </persName>
          <persName>
            <foreName>Éric</foreName>
            <surname>Tanter</surname>
            <initial>É.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">ICFP 2016 - 21st ACM SIGPLAN International Conference on Functional Programming</title>
        <loc>Nara, Japan</loc>
        <imprint>
          <dateStruct>
            <month>September</month>
            <year>2016</year>
          </dateStruct>
          <biblScope type="pages">298-310</biblScope>
          <ref xlink:href="https://hal.inria.fr/hal-01328012" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01328012</ref>
        </imprint>
        <meeting id="cid21926">
          <title>ACM SIGPLAN International Conference on Functional Programming</title>
          <num>21</num>
          <abbr type="sigle">ICFP</abbr>
        </meeting>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid85" type="inproceedings" rend="year" n="cite:narasimhan:hal-01408266">
      <identifiant type="hal" value="hal-01408266"/>
      <analytic>
        <title level="a">Interactive Data Representation Migration: Exploiting Program Dependence to Aid Program Transformation</title>
        <author>
          <persName>
            <foreName>Krishna</foreName>
            <surname>Narasimhan</surname>
            <initial>K.</initial>
          </persName>
          <persName>
            <foreName>Christoph</foreName>
            <surname>Reichenbach</surname>
            <initial>C.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">PEPM 2017 Workshop on Partial Evaluation and Program Manipulation</title>
        <loc>Paris, France</loc>
        <imprint>
          <dateStruct>
            <month>January</month>
            <year>2017</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-01408266" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01408266</ref>
        </imprint>
        <meeting id="cid22560">
          <title>ACM SIGPLAN Symposium on Partial Evaluation and Program Manipulation</title>
          <num>2017</num>
          <abbr type="sigle">PEPM</abbr>
        </meeting>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid71" type="inproceedings" rend="year" n="cite:saied:hal-01337093">
      <identifiant type="hal" value="hal-01337093"/>
      <analytic>
        <title level="a">Automatic Code Generation for Iterative Multi-dimensional Stencil Computations</title>
        <author>
          <persName key="algorille-2014-idp131864">
            <foreName>Mariem</foreName>
            <surname>Saied</surname>
            <initial>M.</initial>
          </persName>
          <persName key="algorille-2014-idp13160">
            <foreName>Jens</foreName>
            <surname>Gustedt</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <editor role="editor">
          <persName key="roma-2014-idp68776">
            <foreName>Anne</foreName>
            <surname>Benoît</surname>
            <initial>A.</initial>
          </persName>
        </editor>
        <title level="m">High Performance Computing, Data, and Analitics</title>
        <loc>Hydarabat, India</loc>
        <imprint>
          <publisher>
            <orgName>IEEE</orgName>
          </publisher>
          <dateStruct>
            <month>December</month>
            <year>2016</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-01337093" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01337093</ref>
        </imprint>
        <meeting id="cid283870">
          <title>International Conference on High Performance Computing</title>
          <num>23</num>
          <abbr type="sigle">HIPC</abbr>
        </meeting>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid45" type="inproceedings" rend="year" n="cite:thung:hal-01355859">
      <identifiant type="hal" value="hal-01355859"/>
      <analytic>
        <title level="a">Recommending Code Changes for Automatic Backporting of Linux Device Drivers</title>
        <author>
          <persName>
            <foreName>Ferdian</foreName>
            <surname>Thung</surname>
            <initial>F.</initial>
          </persName>
          <persName>
            <foreName>Dinh Xuan Bach</foreName>
            <surname>Le</surname>
            <initial>D. X. B.</initial>
          </persName>
          <persName>
            <foreName>David</foreName>
            <surname>Lo</surname>
            <initial>D.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">32nd IEEE International Conference on Software Maintenance and Evolution (ICSME)</title>
        <loc>Raleigh, North Carolina, United States</loc>
        <imprint>
          <publisher>
            <orgName type="organisation">IEEE</orgName>
          </publisher>
          <dateStruct>
            <month>October</month>
            <year>2016</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-01355859" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01355859</ref>
        </imprint>
        <meeting id="cid624469">
          <title>International Conference on Software Maintenance and Evolution</title>
          <num>32</num>
          <abbr type="sigle">ICSME</abbr>
        </meeting>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid84" type="techreport" rend="year" n="cite:blin:hal-01268078">
      <identifiant type="hal" value="hal-01268078"/>
      <monogr>
        <title level="m">Maximizing Parallelism without Exploding Deadlines in a Mixed Criticality Embedded System</title>
        <author>
          <persName key="whisper-2014-idp74488">
            <foreName>Antoine</foreName>
            <surname>Blin</surname>
            <initial>A.</initial>
          </persName>
          <persName key="whisper-2016-idp25888">
            <foreName>Cédric</foreName>
            <surname>Courtaud</surname>
            <initial>C.</initial>
          </persName>
          <persName key="regal-2014-idp72272">
            <foreName>Julien</foreName>
            <surname>Sopena</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
        <imprint>
          <biblScope type="number">RR-8838</biblScope>
          <publisher>
            <orgName type="institution">Inria</orgName>
          </publisher>
          <dateStruct>
            <month>February</month>
            <year>2016</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-01268078" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01268078</ref>
        </imprint>
      </monogr>
      <note type="typdoc">Research Report</note>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid44" type="techreport" rend="year" n="cite:lawall:hal-01330861">
      <identifiant type="hal" value="hal-01330861"/>
      <monogr>
        <title level="m">Prequel: A Patch-Like Query Language for Commit History Search</title>
        <author>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idp70760">
            <foreName>Quentin</foreName>
            <surname>Lambert</surname>
            <initial>Q.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
        <imprint>
          <biblScope type="number">RR-8918</biblScope>
          <publisher>
            <orgName type="institution">Inria Paris</orgName>
          </publisher>
          <dateStruct>
            <month>June</month>
            <year>2016</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-01330861" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01330861</ref>
        </imprint>
      </monogr>
      <note type="typdoc">Research Report</note>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid20" type="inproceedings" rend="foot" n="footcite:Ball:Eurosys06">
      <analytic>
        <title level="a">Thorough Static Analysis of Device Drivers</title>
        <author>
          <persName>
            <foreName>Thomas</foreName>
            <surname>Ball</surname>
            <initial>T.</initial>
          </persName>
          <persName>
            <foreName>Ella</foreName>
            <surname>Bounimova</surname>
            <initial>E.</initial>
          </persName>
          <persName>
            <foreName>Byron</foreName>
            <surname>Cook</surname>
            <initial>B.</initial>
          </persName>
          <persName>
            <foreName>Vladimir</foreName>
            <surname>Levin</surname>
            <initial>V.</initial>
          </persName>
          <persName>
            <foreName>Jakob</foreName>
            <surname>Lichtenberg</surname>
            <initial>J.</initial>
          </persName>
          <persName>
            <foreName>Con</foreName>
            <surname>McGarvey</surname>
            <initial>C.</initial>
          </persName>
          <persName>
            <foreName>Bohus</foreName>
            <surname>Ondrusek</surname>
            <initial>B.</initial>
          </persName>
          <persName>
            <foreName>Sriram K.</foreName>
            <surname>Rajamani</surname>
            <initial>S. K.</initial>
          </persName>
          <persName>
            <foreName>Abdullah</foreName>
            <surname>Ustuner</surname>
            <initial>A.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">EuroSys</title>
        <imprint>
          <dateStruct>
            <year>2006</year>
          </dateStruct>
          <biblScope type="pages">73–85</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid27" type="inproceedings" rend="foot" n="footcite:barrelfish_sosp">
      <analytic>
        <title level="a">The multikernel: A new OS architecture for scalable multicore systems</title>
        <author>
          <persName>
            <foreName>Andrew</foreName>
            <surname>Baumann</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>Paul</foreName>
            <surname>Barham</surname>
            <initial>P.</initial>
          </persName>
          <persName key="gallium-2014-idp75592">
            <foreName>Pierre-Évariste</foreName>
            <surname>Dagand</surname>
            <initial>P.-É.</initial>
          </persName>
          <persName>
            <foreName>Tim</foreName>
            <surname>Harris</surname>
            <initial>T.</initial>
          </persName>
          <persName>
            <foreName>Rebecca</foreName>
            <surname>Isaacs</surname>
            <initial>R.</initial>
          </persName>
          <persName>
            <foreName>Simon</foreName>
            <surname>Peter</surname>
            <initial>S.</initial>
          </persName>
          <persName>
            <foreName>Timothy</foreName>
            <surname>Roscoe</surname>
            <initial>T.</initial>
          </persName>
          <persName>
            <foreName>Adrian</foreName>
            <surname>Schüpbach</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>Akhilesh</foreName>
            <surname>Singhania</surname>
            <initial>A.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">SOSP</title>
        <imprint>
          <dateStruct>
            <year>2009</year>
          </dateStruct>
          <biblScope type="pages">29–44</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid31" type="article" rend="foot" n="footcite:Bissyande:spe13">
      <analytic>
        <title level="a">Implementing an embedded compiler using program transformation rules</title>
        <author>
          <persName>
            <foreName>Tegawendé F.</foreName>
            <surname>Bissyandé</surname>
            <initial>T. F.</initial>
          </persName>
          <persName>
            <foreName>Laurent</foreName>
            <surname>Réveillère</surname>
            <initial>L.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName>
            <foreName>Yérom-David</foreName>
            <surname>Bromberg</surname>
            <initial>Y.-D.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="j">Software: Practice and Experience</title>
        <imprint>
          <dateStruct>
            <year>2013</year>
          </dateStruct>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid36" type="article" rend="foot" n="footcite:bissyande:hal-00844536">
      <identifiant type="hal" value="hal-00844536"/>
      <analytic>
        <title level="a">Implementing an Embedded Compiler using Program Transformation Rules</title>
        <author>
          <persName>
            <foreName>Tegawendé F.</foreName>
            <surname>Bissyandé</surname>
            <initial>T. F.</initial>
          </persName>
          <persName>
            <foreName>Laurent</foreName>
            <surname>Réveillère</surname>
            <initial>L.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
          <persName>
            <foreName>Yérom-David</foreName>
            <surname>Bromberg</surname>
            <initial>Y.-D.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-editorial-board="yes" x-international-audience="yes">
        <title level="j">Software: Practice and Experience</title>
        <imprint>
          <biblScope type="volume">45</biblScope>
          <biblScope type="number">2</biblScope>
          <dateStruct>
            <month>February</month>
            <year>2015</year>
          </dateStruct>
          <biblScope type="pages">177-196</biblScope>
          <ref xlink:href="https://hal.archives-ouvertes.fr/hal-00844536" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>archives-ouvertes.<allowbreak/>fr/<allowbreak/>hal-00844536</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid37" type="article" rend="foot" n="footcite:bissyande:hal-00992283">
      <identifiant type="doi" value="10.1007/s10515-014-0152-4"/>
      <identifiant type="hal" value="hal-00992283"/>
      <analytic>
        <title level="a">Ahead of Time Static Analysis for Automatic Generation of Debugging Interfaces to the Linux Kernel</title>
        <author>
          <persName>
            <foreName>Tegawendé F.</foreName>
            <surname>Bissyandé</surname>
            <initial>T. F.</initial>
          </persName>
          <persName>
            <foreName>Laurent</foreName>
            <surname>Réveillère</surname>
            <initial>L.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-editorial-board="yes" x-international-audience="yes">
        <title level="j">Automated Software Engineering</title>
        <imprint>
          <dateStruct>
            <month>May</month>
            <year>2014</year>
          </dateStruct>
          <biblScope type="pages">1-39</biblScope>
          <ref xlink:href="https://hal.archives-ouvertes.fr/hal-00992283" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>archives-ouvertes.<allowbreak/>fr/<allowbreak/>hal-00992283</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid29" type="book" rend="foot" n="footcite:ducasse:pharo">
      <monogr>
        <title level="m">Pharo by Example</title>
        <author>
          <persName>
            <foreName>Andrew P.</foreName>
            <surname>Black</surname>
            <initial>A. P.</initial>
          </persName>
          <persName key="rmod-2014-idm27704">
            <foreName>Stéphane</foreName>
            <surname>Ducasse</surname>
            <initial>S.</initial>
          </persName>
          <persName>
            <foreName>Oscar</foreName>
            <surname>Nierstrasz</surname>
            <initial>O.</initial>
          </persName>
          <persName key="rmod-2014-idp69640">
            <foreName>Damien</foreName>
            <surname>Pollet</surname>
            <initial>D.</initial>
          </persName>
        </author>
        <imprint>
          <publisher>
            <orgName>Square Bracket Associates</orgName>
          </publisher>
          <dateStruct>
            <year>2010</year>
          </dateStruct>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid33" type="inproceedings" rend="foot" n="footcite:brady:dsl">
      <analytic>
        <title level="a">Resource-Safe Systems Programming with Embedded Domain Specific Languages</title>
        <author>
          <persName>
            <foreName>E.</foreName>
            <surname>Brady</surname>
            <initial>E.</initial>
          </persName>
          <persName>
            <foreName>K.</foreName>
            <surname>Hammond</surname>
            <initial>K.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">14th International Symposium on Practical Aspects of Declarative Languages (PADL)</title>
        <title level="s">LNCS</title>
        <imprint>
          <biblScope type="volume">7149</biblScope>
          <publisher>
            <orgName>Springer</orgName>
          </publisher>
          <dateStruct>
            <year>2012</year>
          </dateStruct>
          <biblScope type="pages">242–257</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid35" type="incollection" rend="foot" n="footcite:braibant:atbr">
      <analytic>
        <title level="a">An Efficient Coq Tactic for Deciding Kleene Algebras</title>
        <author>
          <persName key="gallium-2014-idp74304">
            <foreName>T.</foreName>
            <surname>Braibant</surname>
            <initial>T.</initial>
          </persName>
          <persName>
            <foreName>D.</foreName>
            <surname>Pous</surname>
            <initial>D.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">1st International Conference on Interactive Theorem Proving (ITP)</title>
        <title level="s">LNCS</title>
        <imprint>
          <biblScope type="volume">6172</biblScope>
          <publisher>
            <orgName>Springer</orgName>
          </publisher>
          <dateStruct>
            <year>2010</year>
          </dateStruct>
          <biblScope type="pages">163–178</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid16" type="inproceedings" rend="foot" n="footcite:Cadar:OSDI08">
      <analytic>
        <title level="a">KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs</title>
        <author>
          <persName>
            <foreName>Cristian</foreName>
            <surname>Cadar</surname>
            <initial>C.</initial>
          </persName>
          <persName>
            <foreName>Daniel</foreName>
            <surname>Dunbar</surname>
            <initial>D.</initial>
          </persName>
          <persName>
            <foreName>Dawson R.</foreName>
            <surname>Engler</surname>
            <initial>D. R.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">OSDI</title>
        <imprint>
          <dateStruct>
            <year>2008</year>
          </dateStruct>
          <biblScope type="pages">209–224</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid68" type="inproceedings" rend="foot" n="footcite:lustre:popl87">
      <analytic>
        <title level="a">Lustre: a declarative language for programming synchronous systems</title>
        <author>
          <persName>
            <foreName>P.</foreName>
            <surname>Caspi</surname>
            <initial>P.</initial>
          </persName>
          <persName>
            <foreName>N.</foreName>
            <surname>Halbwachs</surname>
            <initial>N.</initial>
          </persName>
          <persName>
            <foreName>D.</foreName>
            <surname>Pilaud</surname>
            <initial>D.</initial>
          </persName>
          <persName>
            <foreName>J.</foreName>
            <surname>Plaice</surname>
            <initial>J.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">14th ACM Symposium on Principles of Programming Languages</title>
        <imprint>
          <publisher>
            <orgName type="organisation">ACM</orgName>
          </publisher>
          <dateStruct>
            <year>1987</year>
          </dateStruct>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid17" type="inproceedings" rend="foot" n="footcite:Chipounov:EuroSys2010">
      <analytic>
        <title level="a">Reverse Engineering of Binary Device Drivers with RevNIC</title>
        <author>
          <persName>
            <foreName>Vitaly</foreName>
            <surname>Chipounov</surname>
            <initial>V.</initial>
          </persName>
          <persName>
            <foreName>George</foreName>
            <surname>Candea</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">EuroSys</title>
        <imprint>
          <dateStruct>
            <year>2010</year>
          </dateStruct>
          <biblScope type="pages">167–180</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid32" type="inproceedings" rend="foot" n="footcite:Chlipala:icfp13">
      <analytic>
        <title level="a">The Bedrock Structured Programming System: Combining Generative Metaprogramming and Hoare Logic in an Extensible Program Verifier</title>
        <author>
          <persName>
            <foreName>Adam</foreName>
            <surname>Chlipala</surname>
            <initial>A.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">ICFP</title>
        <imprint>
          <dateStruct>
            <year>2013</year>
          </dateStruct>
          <biblScope type="pages">391–402</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid8" type="article" rend="foot" n="footcite:Clarke:tse76">
      <analytic>
        <title level="a">A system to generate test data and symbolically execute programs</title>
        <author>
          <persName>
            <foreName>L. A.</foreName>
            <surname>Clarke</surname>
            <initial>L. A.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="j">IEEE Transactions on Software Engineering</title>
        <imprint>
          <biblScope type="volume">2</biblScope>
          <biblScope type="number">3</biblScope>
          <dateStruct>
            <year>1976</year>
          </dateStruct>
          <biblScope type="pages">215–222</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid19" type="article" rend="foot" n="footcite:Clarke:JACM03">
      <analytic>
        <title level="a">Counterexample-guided abstraction refinement for symbolic model checking</title>
        <author>
          <persName>
            <foreName>E.M.</foreName>
            <surname>Clarke</surname>
            <initial>E.</initial>
          </persName>
          <persName>
            <foreName>O.</foreName>
            <surname>Grumberg</surname>
            <initial>O.</initial>
          </persName>
          <persName>
            <foreName>S.</foreName>
            <surname>Jha</surname>
            <initial>S.</initial>
          </persName>
          <persName>
            <foreName>Y.</foreName>
            <surname>Lu</surname>
            <initial>Y.</initial>
          </persName>
          <persName>
            <foreName>H.</foreName>
            <surname>Veith</surname>
            <initial>H.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="j">J. ACM</title>
        <imprint>
          <biblScope type="volume">50</biblScope>
          <biblScope type="number">5</biblScope>
          <dateStruct>
            <year>2003</year>
          </dateStruct>
          <biblScope type="pages">752–794</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid9" type="inproceedings" rend="foot" n="footcite:Cousot:2014">
      <analytic>
        <title level="a">Abstract Interpretation: Past, Present and Future</title>
        <author>
          <persName key="antique-2014-idm27896">
            <foreName>Patrick</foreName>
            <surname>Cousot</surname>
            <initial>P.</initial>
          </persName>
          <persName key="antique-2014-idm26552">
            <foreName>Radhia</foreName>
            <surname>Cousot</surname>
            <initial>R.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">CSL-LICS</title>
        <imprint>
          <dateStruct>
            <year>2014</year>
          </dateStruct>
          <biblScope type="pages">2:1–2:10</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid67" type="phdthesis" rend="foot" n="footcite:dagand:PhD">
      <monogr>
        <title level="m">Reusability and Dependent Types</title>
        <author>
          <persName key="gallium-2014-idp75592">
            <foreName>Pierre-Évariste</foreName>
            <surname>Dagand</surname>
            <initial>P.-É.</initial>
          </persName>
        </author>
        <imprint>
          <publisher>
            <orgName type="school">University of Strathclyde</orgName>
          </publisher>
          <dateStruct>
            <year>2013</year>
          </dateStruct>
        </imprint>
      </monogr>
      <note type="typdoc">Ph. D. Thesis</note>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid73" type="phdthesis" rend="foot" n="footcite:david:tel-01263203">
      <identifiant type="hal" value="tel-01263203"/>
      <monogr>
        <title level="m">Continuous and Efficient Lock Profiling for Java on Multicore Architectures</title>
        <author>
          <persName key="whisper-2014-idp75720">
            <foreName>Florian</foreName>
            <surname>David</surname>
            <initial>F.</initial>
          </persName>
        </author>
        <imprint>
          <publisher>
            <orgName type="school">Université Pierre et Marie Curie - Paris VI</orgName>
          </publisher>
          <dateStruct>
            <month>July</month>
            <year>2015</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/tel-01263203" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>tel-01263203</ref>
        </imprint>
      </monogr>
      <note type="typdoc">Theses</note>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid10" type="inproceedings" rend="foot" n="footcite:Dillig:pldi08">
      <analytic>
        <title level="a">Sound, complete and scalable path-sensitive analysis</title>
        <author>
          <persName>
            <foreName>Isil</foreName>
            <surname>Dillig</surname>
            <initial>I.</initial>
          </persName>
          <persName>
            <foreName>Thomas</foreName>
            <surname>Dillig</surname>
            <initial>T.</initial>
          </persName>
          <persName>
            <foreName>Alex</foreName>
            <surname>Aiken</surname>
            <initial>A.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">PLDI</title>
        <imprint>
          <dateStruct>
            <month>June</month>
            <year>2008</year>
          </dateStruct>
          <biblScope type="pages">270–280</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid47" type="inproceedings" rend="foot" n="footcite:Engler:OSDI00">
      <analytic>
        <title level="a">Checking System Rules Using System-Specific, Programmer-Written Compiler Extensions</title>
        <author>
          <persName>
            <foreName>Dawson R.</foreName>
            <surname>Engler</surname>
            <initial>D. R.</initial>
          </persName>
          <persName>
            <foreName>Benjamin</foreName>
            <surname>Chelf</surname>
            <initial>B.</initial>
          </persName>
          <persName>
            <foreName>Andy</foreName>
            <surname>Chou</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>Seth</foreName>
            <surname>Hallem</surname>
            <initial>S.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">OSDI</title>
        <imprint>
          <dateStruct>
            <year>2000</year>
          </dateStruct>
          <biblScope type="pages">1–16</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid18" type="inproceedings" rend="foot" n="footcite:Engler:SOSP01">
      <analytic>
        <title level="a">Bugs as Deviant Behavior: A General Approach to Inferring Errors in Systems Code</title>
        <author>
          <persName>
            <foreName>Dawson R.</foreName>
            <surname>Engler</surname>
            <initial>D. R.</initial>
          </persName>
          <persName>
            <foreName>David Yu</foreName>
            <surname>Chen</surname>
            <initial>D. Y.</initial>
          </persName>
          <persName>
            <foreName>Andy</foreName>
            <surname>Chou</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>Benjamin</foreName>
            <surname>Chelf</surname>
            <initial>B.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">SOSP</title>
        <imprint>
          <dateStruct>
            <year>2001</year>
          </dateStruct>
          <biblScope type="pages">57–72</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid28" type="book" rend="foot" n="footcite:Goldberg:smalltalk">
      <monogr>
        <title level="m">Smalltalk-80: The Language and Its Implementation</title>
        <author>
          <persName>
            <foreName>Adele</foreName>
            <surname>Goldberg</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>David</foreName>
            <surname>Robson</surname>
            <initial>D.</initial>
          </persName>
        </author>
        <imprint>
          <publisher>
            <orgName>Addison-Wesley</orgName>
          </publisher>
          <dateStruct>
            <year>1983</year>
          </dateStruct>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid64" type="techreport" rend="foot" n="footcite:gonthier:ssr">
      <monogr>
        <title level="m">A Small Scale Reflection Extension for the Coq system</title>
        <author>
          <persName key="specfun-2016-idp116896">
            <foreName>Georges</foreName>
            <surname>Gonthier</surname>
            <initial>G.</initial>
          </persName>
          <persName key="specfun-2014-idm27888">
            <foreName>Assia</foreName>
            <surname>Mahboubi</surname>
            <initial>A.</initial>
          </persName>
          <persName key="specfun-2014-idm25392">
            <foreName>Enrico</foreName>
            <surname>Tassi</surname>
            <initial>E.</initial>
          </persName>
        </author>
        <imprint>
          <biblScope type="number">RR-6455</biblScope>
          <publisher>
            <orgName type="institution">Inria Saclay Ile de France</orgName>
          </publisher>
          <dateStruct>
            <year>2015</year>
          </dateStruct>
        </imprint>
      </monogr>
      <note type="typdoc">Research Report</note>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid0" type="inproceedings" rend="foot" n="footcite:shao:certikos">
      <analytic>
        <title level="a">CertiKOS: A Certified Kernel for Secure Cloud Computing</title>
        <author>
          <persName>
            <foreName>Liang</foreName>
            <surname>Gu</surname>
            <initial>L.</initial>
          </persName>
          <persName>
            <foreName>Alexander</foreName>
            <surname>Vaynberg</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>Bryan</foreName>
            <surname>Ford</surname>
            <initial>B.</initial>
          </persName>
          <persName key="aoste-2016-idp252848">
            <foreName>Zhong</foreName>
            <surname>Shao</surname>
            <initial>Z.</initial>
          </persName>
          <persName>
            <foreName>David</foreName>
            <surname>Costanzo</surname>
            <initial>D.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">Proceedings of the Second Asia-Pacific Workshop on Systems (APSys)</title>
        <imprint>
          <dateStruct>
            <year>2011</year>
          </dateStruct>
          <biblScope type="pages">3:1–3:5</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid56" type="inproceedings" rend="foot" n="footcite:Guo:MSR14">
      <analytic>
        <title level="a">Oops! Where did that code snippet come from?</title>
        <author>
          <persName key="whisper-2014-idp76952">
            <foreName>Lisong</foreName>
            <surname>Guo</surname>
            <initial>L.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">11th Working Conference on Mining Software Repositories, MSR</title>
        <loc>Hyderabad, India</loc>
        <imprint>
          <publisher>
            <orgName>ACM</orgName>
          </publisher>
          <dateStruct>
            <month>May</month>
            <year>2014</year>
          </dateStruct>
          <biblScope type="pages">52–61</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid51" type="article" rend="foot" n="footcite:Israeli:JSS10">
      <analytic>
        <title level="a">The Linux kernel as a case study in software evolution</title>
        <author>
          <persName>
            <foreName>Ayelet</foreName>
            <surname>Israeli</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>Dror G.</foreName>
            <surname>Feitelson</surname>
            <initial>D. G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="j">Journal of Systems and Software</title>
        <imprint>
          <biblScope type="volume">83</biblScope>
          <biblScope type="number">3</biblScope>
          <dateStruct>
            <year>2010</year>
          </dateStruct>
          <biblScope type="pages">485–501</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid59" type="inproceedings" rend="foot" n="footcite:Kadav:asplos12">
      <analytic>
        <title level="a">Understanding modern device drivers</title>
        <author>
          <persName>
            <foreName>Asim</foreName>
            <surname>Kadav</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>Michael M.</foreName>
            <surname>Swift</surname>
            <initial>M. M.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">ASPLOS</title>
        <imprint>
          <dateStruct>
            <year>2012</year>
          </dateStruct>
          <biblScope type="pages">87–98</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid14" type="inproceedings" rend="foot" n="footcite:Kildall:1973">
      <analytic>
        <title level="a">A Unified Approach to Global Program Optimization</title>
        <author>
          <persName>
            <foreName>Gary A.</foreName>
            <surname>Kildall</surname>
            <initial>G. A.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">POPL</title>
        <imprint>
          <dateStruct>
            <year>1973</year>
          </dateStruct>
          <biblScope type="pages">194–206</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid1" type="inproceedings" rend="foot" n="footcite:Klein:sosp09">
      <analytic>
        <title level="a">seL4: formal verification of an OS kernel</title>
        <author>
          <persName>
            <foreName>Gerwin</foreName>
            <surname>Klein</surname>
            <initial>G.</initial>
          </persName>
          <persName>
            <foreName>Kevin</foreName>
            <surname>Elphinstone</surname>
            <initial>K.</initial>
          </persName>
          <persName>
            <foreName>Gernot</foreName>
            <surname>Heiser</surname>
            <initial>G.</initial>
          </persName>
          <persName>
            <foreName>June</foreName>
            <surname>Andronick</surname>
            <initial>J.</initial>
          </persName>
          <persName>
            <foreName>David</foreName>
            <surname>Cock</surname>
            <initial>D.</initial>
          </persName>
          <persName>
            <foreName>Philip</foreName>
            <surname>Derrin</surname>
            <initial>P.</initial>
          </persName>
          <persName>
            <foreName>Dhammika</foreName>
            <surname>Elkaduwe</surname>
            <initial>D.</initial>
          </persName>
          <persName>
            <foreName>Kai</foreName>
            <surname>Engelhardt</surname>
            <initial>K.</initial>
          </persName>
          <persName>
            <foreName>Rafal</foreName>
            <surname>Kolanski</surname>
            <initial>R.</initial>
          </persName>
          <persName>
            <foreName>Michael</foreName>
            <surname>Norrish</surname>
            <initial>M.</initial>
          </persName>
          <persName>
            <foreName>Thomas</foreName>
            <surname>Sewell</surname>
            <initial>T.</initial>
          </persName>
          <persName>
            <foreName>Harvey</foreName>
            <surname>Tuch</surname>
            <initial>H.</initial>
          </persName>
          <persName>
            <foreName>Simon</foreName>
            <surname>Winwood</surname>
            <initial>S.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">SOSP</title>
        <imprint>
          <dateStruct>
            <year>2009</year>
          </dateStruct>
          <biblScope type="pages">207–220</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid53" type="article" rend="foot" n="footcite:Lawall:SPE2013">
      <analytic>
        <title level="a">WYSIWIB: Exploiting fine-grained program structure in a scriptable API-usage protocol-finding process</title>
        <author>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName>
            <foreName>Julien</foreName>
            <surname>Brunel</surname>
            <initial>J.</initial>
          </persName>
          <persName>
            <foreName>Nicolas</foreName>
            <surname>Palix</surname>
            <initial>N.</initial>
          </persName>
          <persName>
            <foreName>René Rydhof</foreName>
            <surname>Hansen</surname>
            <initial>R. R.</initial>
          </persName>
          <persName>
            <foreName>Henrik</foreName>
            <surname>Stuart</surname>
            <initial>H.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="j">Software, Practice Experience</title>
        <imprint>
          <biblScope type="volume">43</biblScope>
          <biblScope type="number">1</biblScope>
          <dateStruct>
            <year>2013</year>
          </dateStruct>
          <biblScope type="pages">67–92</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid54" type="inproceedings" rend="foot" n="footcite:lawall:edcc10">
      <analytic>
        <title level="a">Finding Error Handling Bugs in OpenSSL using Coccinelle</title>
        <author>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName>
            <foreName>Ben</foreName>
            <surname>Laurie</surname>
            <initial>B.</initial>
          </persName>
          <persName>
            <foreName>René Rydhof</foreName>
            <surname>Hansen</surname>
            <initial>R. R.</initial>
          </persName>
          <persName>
            <foreName>Nicolas</foreName>
            <surname>Palix</surname>
            <initial>N.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">Proceeding of the 8th European Dependable Computing Conference (EDCC)</title>
        <loc>Valencia, Spain</loc>
        <imprint>
          <dateStruct>
            <month>April</month>
            <year>2010</year>
          </dateStruct>
          <biblScope type="pages">191–196</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid22" type="inproceedings" rend="foot" n="footcite:Lawall:ASE10">
      <analytic>
        <title level="a">An automated approach for finding variable-constant pairing bugs</title>
        <author>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName>
            <foreName>David</foreName>
            <surname>Lo</surname>
            <initial>D.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">25th IEEE/ACM International Conference on Automated Software Engineering</title>
        <loc>Antwerp, Belgium</loc>
        <imprint>
          <dateStruct>
            <month>September</month>
            <year>2010</year>
          </dateStruct>
          <biblScope type="pages">103–112</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid69" type="article" rend="foot" n="footcite:leroy:compcert">
      <analytic>
        <title level="a">Formal verification of a realistic compiler</title>
        <author>
          <persName key="gallium-2014-idm29528">
            <foreName>Xavier</foreName>
            <surname>Leroy</surname>
            <initial>X.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="j">Communications of the ACM</title>
        <imprint>
          <biblScope type="volume">52</biblScope>
          <biblScope type="number">7</biblScope>
          <dateStruct>
            <year>2009</year>
          </dateStruct>
          <biblScope type="pages">107–115</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid60" type="inproceedings" rend="foot" n="footcite:Li:osdi04">
      <analytic>
        <title level="a">CP-Miner: A Tool for Finding Copy-paste and Related Bugs in Operating System Code</title>
        <author>
          <persName>
            <foreName>Zhenmin</foreName>
            <surname>Li</surname>
            <initial>Z.</initial>
          </persName>
          <persName>
            <foreName>Shan</foreName>
            <surname>Lu</surname>
            <initial>S.</initial>
          </persName>
          <persName>
            <foreName>Suvda</foreName>
            <surname>Myagmar</surname>
            <initial>S.</initial>
          </persName>
          <persName>
            <foreName>Yuanyuan</foreName>
            <surname>Zhou</surname>
            <initial>Y.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">OSDI</title>
        <imprint>
          <dateStruct>
            <year>2004</year>
          </dateStruct>
          <biblScope type="pages">289–302</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid48" type="inproceedings" rend="foot" n="footcite:Li:fse05">
      <analytic>
        <title level="a">PR-Miner: automatically extracting implicit programming rules and detecting violations in large software code</title>
        <author>
          <persName>
            <foreName>Zhenmin</foreName>
            <surname>Li</surname>
            <initial>Z.</initial>
          </persName>
          <persName>
            <foreName>Yuanyuan</foreName>
            <surname>Zhou</surname>
            <initial>Y.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">Proceedings of the 10th European Software Engineering Conference</title>
        <imprint>
          <dateStruct>
            <year>2005</year>
          </dateStruct>
          <biblScope type="pages">306–315</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid11" type="inproceedings" rend="foot" n="footcite:Lo:FSE06">
      <analytic>
        <title level="a">SMArTIC: towards building an accurate, robust and scalable specification miner</title>
        <author>
          <persName>
            <foreName>David</foreName>
            <surname>Lo</surname>
            <initial>D.</initial>
          </persName>
          <persName>
            <foreName>Siau-Cheng</foreName>
            <surname>Khoo</surname>
            <initial>S.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">FSE</title>
        <imprint>
          <dateStruct>
            <year>2006</year>
          </dateStruct>
          <biblScope type="pages">265–275</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid74" type="inproceedings" rend="foot" n="footcite:Lozi:usenix12">
      <analytic>
        <title level="a">Remote Core Locking: migrating critical-section execution to improve the performance of multithreaded applications</title>
        <author>
          <persName>
            <foreName>Jean-Pierre</foreName>
            <surname>Lozi</surname>
            <initial>J.-P.</initial>
          </persName>
          <persName key="whisper-2014-idp75720">
            <foreName>Florian</foreName>
            <surname>David</surname>
            <initial>F.</initial>
          </persName>
          <persName key="whisper-2014-idp68048">
            <foreName>Gaël</foreName>
            <surname>Thomas</surname>
            <initial>G.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">USENIX Annual Technical Conference</title>
        <loc>Boston, MA, USA</loc>
        <imprint>
          <dateStruct>
            <month>June</month>
            <year>2012</year>
          </dateStruct>
          <biblScope type="pages">65–76</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid70" type="inproceedings" rend="foot" n="footcite:Lozi:Eurosys16">
      <identifiant type="doi" value="10.1145/2901318.2901326"/>
      <analytic>
        <title level="a">The Linux scheduler: a decade of wasted cores</title>
        <author>
          <persName>
            <foreName>Jean-Pierre</foreName>
            <surname>Lozi</surname>
            <initial>J.</initial>
          </persName>
          <persName>
            <foreName>Baptiste</foreName>
            <surname>Lepers</surname>
            <initial>B.</initial>
          </persName>
          <persName>
            <foreName>Justin R.</foreName>
            <surname>Funston</surname>
            <initial>J. R.</initial>
          </persName>
          <persName>
            <foreName>Fabien</foreName>
            <surname>Gaud</surname>
            <initial>F.</initial>
          </persName>
          <persName>
            <foreName>Vivien</foreName>
            <surname>Quéma</surname>
            <initial>V.</initial>
          </persName>
          <persName>
            <foreName>Alexandra</foreName>
            <surname>Fedorova</surname>
            <initial>A.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <editor role="editor">
          <persName>
            <foreName>Cristian</foreName>
            <surname>Cadar</surname>
            <initial>C.</initial>
          </persName>
          <persName>
            <foreName>Peter</foreName>
            <surname>Pietzuch</surname>
            <initial>P.</initial>
          </persName>
          <persName>
            <foreName>Kimberly</foreName>
            <surname>Keeton</surname>
            <initial>K.</initial>
          </persName>
          <persName>
            <foreName>Rodrigo</foreName>
            <surname>Rodrigues</surname>
            <initial>R.</initial>
          </persName>
        </editor>
        <title level="m">Proceedings of the Eleventh European Conference on Computer Systems, EuroSys 2016, London, United Kingdom, April 18-21, 2016</title>
        <imprint>
          <publisher>
            <orgName>ACM</orgName>
          </publisher>
          <dateStruct>
            <year>2016</year>
          </dateStruct>
          <biblScope type="pages">1:1–1:16</biblScope>
          <ref xlink:href="http://doi.acm.org/10.1145/2901318.2901326" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">http://<allowbreak/>doi.<allowbreak/>acm.<allowbreak/>org/<allowbreak/>10.<allowbreak/>1145/<allowbreak/>2901318.<allowbreak/>2901326</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid72" type="phdthesis" rend="foot" n="footcite:lozi:tel-01067244">
      <identifiant type="hal" value="tel-01067244"/>
      <monogr>
        <title level="m">Towards more scalable mutual exclusion for multicore architectures</title>
        <author>
          <persName>
            <foreName>Jean-Pierre</foreName>
            <surname>Lozi</surname>
            <initial>J.-P.</initial>
          </persName>
        </author>
        <imprint>
          <publisher>
            <orgName type="school">Université Pierre et Marie Curie - Paris VI</orgName>
          </publisher>
          <dateStruct>
            <month>July</month>
            <year>2014</year>
          </dateStruct>
          <ref xlink:href="https://tel.archives-ouvertes.fr/tel-01067244" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>tel.<allowbreak/>archives-ouvertes.<allowbreak/>fr/<allowbreak/>tel-01067244</ref>
        </imprint>
      </monogr>
      <note type="typdoc">Theses</note>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid12" type="article" rend="foot" n="footcite:Lu:TSE12">
      <analytic>
        <title level="a">Finding Atomicity-Violation Bugs through Unserializable Interleaving Testing</title>
        <author>
          <persName>
            <foreName>Shan</foreName>
            <surname>Lu</surname>
            <initial>S.</initial>
          </persName>
          <persName>
            <foreName>Soyeon</foreName>
            <surname>Park</surname>
            <initial>S.</initial>
          </persName>
          <persName>
            <foreName>Yuanyuan</foreName>
            <surname>Zhou</surname>
            <initial>Y.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="j">IEEE Transactions on Software Engineering</title>
        <imprint>
          <biblScope type="volume">38</biblScope>
          <biblScope type="number">4</biblScope>
          <dateStruct>
            <year>2012</year>
          </dateStruct>
          <biblScope type="pages">844–860</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid24" type="article" rend="foot" n="footcite:Mernik:ACS:dsl">
      <identifiant type="doi" value="10.1145/1118890.1118892"/>
      <analytic>
        <title level="a">When and How to Develop Domain-specific Languages</title>
        <author>
          <persName>
            <foreName>Marjan</foreName>
            <surname>Mernik</surname>
            <initial>M.</initial>
          </persName>
          <persName>
            <foreName>Jan</foreName>
            <surname>Heering</surname>
            <initial>J.</initial>
          </persName>
          <persName>
            <foreName>Anthony M.</foreName>
            <surname>Sloane</surname>
            <initial>A. M.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="j">ACM Comput. Surv.</title>
        <imprint>
          <biblScope type="volume">37</biblScope>
          <biblScope type="number">4</biblScope>
          <dateStruct>
            <month>December</month>
            <year>2005</year>
          </dateStruct>
          <biblScope type="pages">316–344</biblScope>
          <ref xlink:href="http://dx.doi.org/10.1145/1118890.1118892" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">http://<allowbreak/>dx.<allowbreak/>doi.<allowbreak/>org/<allowbreak/>10.<allowbreak/>1145/<allowbreak/>1118890.<allowbreak/>1118892</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid46" type="inproceedings" rend="foot" n="footcite:Morrisett:pldi12">
      <analytic>
        <title level="a">RockSalt: better, faster, stronger SFI for the x86</title>
        <author>
          <persName>
            <foreName>Greg</foreName>
            <surname>Morrisett</surname>
            <initial>G.</initial>
          </persName>
          <persName>
            <foreName>Gang</foreName>
            <surname>Tan</surname>
            <initial>G.</initial>
          </persName>
          <persName>
            <foreName>Joseph</foreName>
            <surname>Tassarotti</surname>
            <initial>J.</initial>
          </persName>
          <persName>
            <foreName>Jean-Baptiste</foreName>
            <surname>Tristan</surname>
            <initial>J.-B.</initial>
          </persName>
          <persName>
            <foreName>Edward</foreName>
            <surname>Gan</surname>
            <initial>E.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">PLDI</title>
        <imprint>
          <dateStruct>
            <year>2012</year>
          </dateStruct>
          <biblScope type="pages">395-404</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid30" type="article" rend="foot" n="footcite:odersky:cacm:scala">
      <analytic>
        <title level="a">Unifying functional and object-oriented programming with Scala</title>
        <author>
          <persName>
            <foreName>Martin</foreName>
            <surname>Odersky</surname>
            <initial>M.</initial>
          </persName>
          <persName>
            <foreName>Tiark</foreName>
            <surname>Rompf</surname>
            <initial>T.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="j">Commun. ACM</title>
        <imprint>
          <biblScope type="volume">57</biblScope>
          <biblScope type="number">4</biblScope>
          <dateStruct>
            <year>2014</year>
          </dateStruct>
          <biblScope type="pages">76–86</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid38" type="article" rend="foot" n="footcite:olesen:hal-01096185">
      <identifiant type="hal" value="hal-01096185"/>
      <analytic>
        <title level="a">Coccinelle: Tool support for automated CERT C Secure Coding Standard certification</title>
        <author>
          <persName>
            <foreName>Mads Chr.</foreName>
            <surname>Olesen</surname>
            <initial>M. C.</initial>
          </persName>
          <persName>
            <foreName>René Rydhof</foreName>
            <surname>Hansen</surname>
            <initial>R. R.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName>
            <foreName>Nicolas</foreName>
            <surname>Palix</surname>
            <initial>N.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-editorial-board="yes" x-international-audience="yes">
        <title level="j">Science of Computer Programming</title>
        <imprint>
          <biblScope type="volume">91</biblScope>
          <biblScope type="number">B</biblScope>
          <dateStruct>
            <month>October</month>
            <year>2014</year>
          </dateStruct>
          <biblScope type="pages">141–160</biblScope>
          <ref xlink:href="https://hal.inria.fr/hal-01096185" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01096185</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid77" type="inproceedings" rend="foot" n="footcite:pavneetsingh:hal-01096132">
      <identifiant type="hal" value="hal-01096132"/>
      <analytic>
        <title level="a">An Empirical Study on the Adequacy of Testing in Open Source Projects</title>
        <author>
          <persName>
            <foreName>Kochaar</foreName>
            <surname>Pavneet Singh</surname>
            <initial>K.</initial>
          </persName>
          <persName>
            <foreName>Ferdian</foreName>
            <surname>Thung</surname>
            <initial>F.</initial>
          </persName>
          <persName>
            <foreName>David</foreName>
            <surname>Lo</surname>
            <initial>D.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">21st Asia-Pacific Software Engineering Conference</title>
        <loc>Jeju, South Korea</loc>
        <imprint>
          <dateStruct>
            <month>December</month>
            <year>2014</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-01096132" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01096132</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid13" type="inproceedings" rend="foot" n="footcite:Reps:1997">
      <analytic>
        <title level="a">The Use of Program Profiling for Software Maintenance with Applications to the Year 2000 Problem</title>
        <author>
          <persName>
            <foreName>Thomas</foreName>
            <surname>Reps</surname>
            <initial>T.</initial>
          </persName>
          <persName>
            <foreName>Thomas</foreName>
            <surname>Ball</surname>
            <initial>T.</initial>
          </persName>
          <persName>
            <foreName>Manuvir</foreName>
            <surname>Das</surname>
            <initial>M.</initial>
          </persName>
          <persName>
            <foreName>James</foreName>
            <surname>Larus</surname>
            <initial>J.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">ESEC/FSE</title>
        <imprint>
          <dateStruct>
            <year>1997</year>
          </dateStruct>
          <biblScope type="pages">432–449</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid39" type="inproceedings" rend="foot" n="footcite:rodriguez:hal-01213912">
      <identifiant type="hal" value="hal-01213912"/>
      <analytic>
        <title level="a">Increasing Automation in the Backporting of Linux Drivers Using Coccinelle</title>
        <author>
          <persName>
            <foreName>Luis R.</foreName>
            <surname>Rodriguez</surname>
            <initial>L. R.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">11th European Dependable Computing Conference - Dependability in Practice</title>
        <loc>Paris, France</loc>
        <title level="s">11th European Dependable Computing Conference - Dependability in Practice</title>
        <imprint>
          <dateStruct>
            <month>November</month>
            <year>2015</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-01213912" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01213912</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid49" type="inproceedings" rend="foot" n="footcite:Rubio-Gonzalez:PLDI09">
      <analytic>
        <title level="a">Error propagation analysis for file systems</title>
        <author>
          <persName>
            <foreName>Cindy</foreName>
            <surname>Rubio-González</surname>
            <initial>C.</initial>
          </persName>
          <persName>
            <foreName>Haryadi S.</foreName>
            <surname>Gunawi</surname>
            <initial>H. S.</initial>
          </persName>
          <persName>
            <foreName>Ben</foreName>
            <surname>Liblit</surname>
            <initial>B.</initial>
          </persName>
          <persName>
            <foreName>Remzi H.</foreName>
            <surname>Arpaci-Dusseau</surname>
            <initial>R. H.</initial>
          </persName>
          <persName>
            <foreName>Andrea C.</foreName>
            <surname>Arpaci-Dusseau</surname>
            <initial>A. C.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">PLDI</title>
        <loc>Dublin, Ireland</loc>
        <imprint>
          <publisher>
            <orgName>ACM</orgName>
          </publisher>
          <dateStruct>
            <month>June</month>
            <year>2009</year>
          </dateStruct>
          <biblScope type="pages">270–280</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid57" type="inproceedings" rend="foot" n="footcite:Ryzhyk:sosp09">
      <analytic>
        <title level="a">Automatic device driver synthesis with Termite</title>
        <author>
          <persName>
            <foreName>Leonid</foreName>
            <surname>Ryzhyk</surname>
            <initial>L.</initial>
          </persName>
          <persName>
            <foreName>Peter</foreName>
            <surname>Chubb</surname>
            <initial>P.</initial>
          </persName>
          <persName>
            <foreName>Ihor</foreName>
            <surname>Kuz</surname>
            <initial>I.</initial>
          </persName>
          <persName>
            <foreName>Etienne</foreName>
            <surname>Le Sueur</surname>
            <initial>E.</initial>
          </persName>
          <persName>
            <foreName>Gernot</foreName>
            <surname>Heiser</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">SOSP</title>
        <imprint>
          <dateStruct>
            <year>2009</year>
          </dateStruct>
          <biblScope type="pages">73–86</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid58" type="inproceedings" rend="foot" n="footcite:Ryzhyk:osdi14">
      <analytic>
        <title level="a">User-Guided Device Driver Synthesis</title>
        <author>
          <persName>
            <foreName>Leonid</foreName>
            <surname>Ryzhyk</surname>
            <initial>L.</initial>
          </persName>
          <persName>
            <foreName>Adam</foreName>
            <surname>Walker</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>John</foreName>
            <surname>Keys</surname>
            <initial>J.</initial>
          </persName>
          <persName>
            <foreName>Alexander</foreName>
            <surname>Legg</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>Arun</foreName>
            <surname>Raghunath</surname>
            <initial>A.</initial>
          </persName>
          <persName>
            <foreName>Michael</foreName>
            <surname>Stumm</surname>
            <initial>M.</initial>
          </persName>
          <persName>
            <foreName>Mona</foreName>
            <surname>Vij</surname>
            <initial>M.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">OSDI</title>
        <imprint>
          <dateStruct>
            <year>2014</year>
          </dateStruct>
          <biblScope type="pages">661–676</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid40" type="inproceedings" rend="foot" n="footcite:saha:hal-01086082">
      <identifiant type="doi" value="10.1109/ICSME.2014.38"/>
      <identifiant type="hal" value="hal-01086082"/>
      <analytic>
        <title level="a">On the Effectiveness of Information Retrieval Based Bug Localization for C Programs</title>
        <author>
          <persName>
            <foreName>Ripon k.</foreName>
            <surname>Saha</surname>
            <initial>R. k.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName>
            <foreName>Sarfraz</foreName>
            <surname>Khurshid</surname>
            <initial>S.</initial>
          </persName>
          <persName>
            <foreName>Dewayne E.</foreName>
            <surname>Perry</surname>
            <initial>D. E.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">ICSME 2014 - 30th International Conference on Software Maintenance and Evolution</title>
        <loc>Victoria, Canada</loc>
        <imprint>
          <publisher>
            <orgName type="organisation">IEEE</orgName>
          </publisher>
          <dateStruct>
            <month>September</month>
            <year>2014</year>
          </dateStruct>
          <biblScope type="pages">161-170</biblScope>
          <ref xlink:href="https://hal.inria.fr/hal-01086082" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01086082</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid55" type="inproceedings" rend="foot" n="footcite:Saha:ICSME14">
      <analytic>
        <title level="a">On the Effectiveness of Information Retrieval based Bug Localization for C Programs</title>
        <author>
          <persName>
            <foreName>Ripon</foreName>
            <surname>Saha</surname>
            <initial>R.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
          <persName>
            <foreName>Sarfraz</foreName>
            <surname>Khurshid</surname>
            <initial>S.</initial>
          </persName>
          <persName>
            <foreName>Dewayne E</foreName>
            <surname>Perry</surname>
            <initial>D. E.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">International Conference on Software Maintenance and Evolution (ICSME)</title>
        <loc>Victoria, BC, Canada</loc>
        <imprint>
          <dateStruct>
            <month>September</month>
            <year>2014</year>
          </dateStruct>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid41" type="inproceedings" rend="foot" n="footcite:saha:hal-00918079">
      <identifiant type="doi" value="10.1109/DSN.2013.6575307"/>
      <identifiant type="hal" value="hal-00918079"/>
      <analytic>
        <title level="a">Hector: Detecting resource-release omission faults in error-handling code for systems software</title>
        <author>
          <persName>
            <foreName>Suman</foreName>
            <surname>Saha</surname>
            <initial>S.</initial>
          </persName>
          <persName>
            <foreName>Jean-Pierre</foreName>
            <surname>Lozi</surname>
            <initial>J.-P.</initial>
          </persName>
          <persName key="whisper-2014-idp68048">
            <foreName>Gaël</foreName>
            <surname>Thomas</surname>
            <initial>G.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">DSN 2013 - 43rd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)</title>
        <loc>Budapest, Hungary</loc>
        <imprint>
          <publisher>
            <orgName>IEEE Computer Society</orgName>
          </publisher>
          <publisher>
            <orgName type="organisation">IEEE/IFIP</orgName>
          </publisher>
          <dateStruct>
            <month>June</month>
            <year>2013</year>
          </dateStruct>
          <biblScope type="pages">1-12</biblScope>
          <ref xlink:href="https://hal.inria.fr/hal-00918079" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-00918079</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid61" type="phdthesis" rend="foot" n="footcite:saha:tel-00937807">
      <identifiant type="hal" value="tel-00937807"/>
      <monogr>
        <title level="m">Improving the Quality of Error-Handling Code in Systems Software using Function-Local Information</title>
        <author>
          <persName>
            <foreName>Suman</foreName>
            <surname>Saha</surname>
            <initial>S.</initial>
          </persName>
        </author>
        <imprint>
          <publisher>
            <orgName type="school">Université Pierre et Marie Curie - Paris VI</orgName>
          </publisher>
          <dateStruct>
            <month>March</month>
            <year>2013</year>
          </dateStruct>
          <ref xlink:href="https://tel.archives-ouvertes.fr/tel-00937807" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>tel.<allowbreak/>archives-ouvertes.<allowbreak/>fr/<allowbreak/>tel-00937807</ref>
        </imprint>
      </monogr>
      <note type="typdoc">Theses</note>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid15" type="inproceedings" rend="foot" n="footcite:Schmidt:POPL98">
      <analytic>
        <title level="a">Data Flow Analysis is Model Checking of Abstract Interpretations</title>
        <author>
          <persName>
            <foreName>David A.</foreName>
            <surname>Schmidt</surname>
            <initial>D. A.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">POPL</title>
        <imprint>
          <dateStruct>
            <year>1998</year>
          </dateStruct>
          <biblScope type="pages">38–48</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid78" type="inproceedings" rend="foot" n="footcite:senna:hal-00927070">
      <identifiant type="doi" value="10.1145/2525528.2525536"/>
      <identifiant type="hal" value="hal-00927070"/>
      <analytic>
        <title level="a">Understanding the genetic makeup of Linux device drivers</title>
        <author>
          <persName>
            <foreName>Peter</foreName>
            <surname>Senna</surname>
            <initial>P.</initial>
          </persName>
          <persName>
            <foreName>Laurent</foreName>
            <surname>Réveillère</surname>
            <initial>L.</initial>
          </persName>
          <persName>
            <foreName>Lingxiao</foreName>
            <surname>Jiang</surname>
            <initial>L.</initial>
          </persName>
          <persName>
            <foreName>David</foreName>
            <surname>Lo</surname>
            <initial>D.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">PLOS'13 - 7th Workshop on Programming Languages and Operating Systems</title>
        <loc>Nemacolin Woodlands Resort, Pennsylvania, United States</loc>
        <imprint>
          <publisher>
            <orgName>ACM</orgName>
          </publisher>
          <dateStruct>
            <month>November</month>
            <year>2013</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-00927070" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-00927070</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid42" type="inproceedings" rend="foot" n="footcite:sennatschudin:hal-01239980">
      <identifiant type="hal" value="hal-01239980"/>
      <analytic>
        <title level="a">3L: Learning Linux Logging</title>
        <author>
          <persName key="whisper-2014-idp79424">
            <foreName>Peter</foreName>
            <surname>Senna Tschudin</surname>
            <initial>P.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
          <persName key="whisper-2014-idm28256">
            <foreName>Gilles</foreName>
            <surname>Muller</surname>
            <initial>G.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="no" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">BElgian-NEtherlands software eVOLution seminar (BENEVOL 2015)</title>
        <loc>Lille, France</loc>
        <imprint>
          <dateStruct>
            <month>December</month>
            <year>2015</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-01239980" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01239980</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid25" type="article" rend="foot" n="footcite:Shapiro_cacm09">
      <analytic>
        <title level="a">Purpose-built languages</title>
        <author>
          <persName>
            <foreName>Mike</foreName>
            <surname>Shapiro</surname>
            <initial>M.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="j">Commun. ACM</title>
        <imprint>
          <biblScope type="volume">52</biblScope>
          <biblScope type="number">4</biblScope>
          <dateStruct>
            <year>2009</year>
          </dateStruct>
          <biblScope type="pages">36–41</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid50" type="inproceedings" rend="foot" n="footcite:Tartler:eurosys11">
      <analytic>
        <title level="a">Feature consistency in compile-time-configurable system software: facing the Linux 10,000 feature problem</title>
        <author>
          <persName>
            <foreName>Reinhard</foreName>
            <surname>Tartler</surname>
            <initial>R.</initial>
          </persName>
          <persName>
            <foreName>Daniel</foreName>
            <surname>Lohmann</surname>
            <initial>D.</initial>
          </persName>
          <persName>
            <foreName>Julio</foreName>
            <surname>Sincero</surname>
            <initial>J.</initial>
          </persName>
          <persName>
            <foreName>Wolfgang</foreName>
            <surname>Schröder-Preikschat</surname>
            <initial>W.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">EuroSys</title>
        <imprint>
          <dateStruct>
            <year>2011</year>
          </dateStruct>
          <biblScope type="pages">47–60</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid79" type="inproceedings" rend="foot" n="footcite:thung:hal-00918076">
      <identifiant type="doi" value="10.1109/WCRE.2013.6671293"/>
      <identifiant type="hal" value="hal-00918076"/>
      <analytic>
        <title level="a">Automated library recommendation</title>
        <author>
          <persName>
            <foreName>Ferdian</foreName>
            <surname>Thung</surname>
            <initial>F.</initial>
          </persName>
          <persName>
            <foreName>David</foreName>
            <surname>Lo</surname>
            <initial>D.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia L.</foreName>
            <surname>Lawall</surname>
            <initial>J. L.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <editor role="editor">
          <persName>
            <foreName>Ralf</foreName>
            <surname>Lämmel</surname>
            <initial>R.</initial>
          </persName>
          <persName>
            <foreName>Rocco</foreName>
            <surname>Oliveto</surname>
            <initial>R.</initial>
          </persName>
          <persName>
            <foreName>Romain</foreName>
            <surname>Robbes</surname>
            <initial>R.</initial>
          </persName>
        </editor>
        <title level="m">WCRE 2013 - 20th Working Conference on Reverse Engineering</title>
        <loc>Koblenz, Germany</loc>
        <imprint>
          <publisher>
            <orgName>IEEE</orgName>
          </publisher>
          <publisher>
            <orgName type="organisation">IEEE</orgName>
          </publisher>
          <dateStruct>
            <month>October</month>
            <year>2013</year>
          </dateStruct>
          <biblScope type="pages">182-191</biblScope>
          <ref xlink:href="https://hal.inria.fr/hal-00918076" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-00918076</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid80" type="inproceedings" rend="foot" n="footcite:thung:hal-00918828">
      <identifiant type="hal" value="hal-00918828"/>
      <analytic>
        <title level="a">Automatic recommendation of API methods from feature requests</title>
        <author>
          <persName>
            <foreName>Ferdian</foreName>
            <surname>Thung</surname>
            <initial>F.</initial>
          </persName>
          <persName key="crypt-2014-idp82280">
            <foreName>Shaowei</foreName>
            <surname>Wang</surname>
            <initial>S.</initial>
          </persName>
          <persName>
            <foreName>David</foreName>
            <surname>Lo</surname>
            <initial>D.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <editor role="editor">
          <persName>
            <foreName>Ewen</foreName>
            <surname>Denney</surname>
            <initial>E.</initial>
          </persName>
          <persName>
            <foreName>Tevfik</foreName>
            <surname>Bultan</surname>
            <initial>T.</initial>
          </persName>
          <persName>
            <foreName>Andreas</foreName>
            <surname>Zeller</surname>
            <initial>A.</initial>
          </persName>
        </editor>
        <title level="m">ASE 2013 - 28th IEEE/ACM International Conference on Automated Software Engineering</title>
        <loc>Palo Alto, California, United States</loc>
        <imprint>
          <publisher>
            <orgName>IEEE</orgName>
          </publisher>
          <publisher>
            <orgName type="organisation">IEEE/ACM</orgName>
          </publisher>
          <dateStruct>
            <month>November</month>
            <year>2013</year>
          </dateStruct>
          <ref xlink:href="https://hal.inria.fr/hal-00918828" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-00918828</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid81" type="inproceedings" rend="foot" n="footcite:tian:hal-01086077">
      <identifiant type="hal" value="hal-01086077"/>
      <analytic>
        <title level="a">Automated construction of a software-specific word similarity database</title>
        <author>
          <persName>
            <foreName>Yuan</foreName>
            <surname>Tian</surname>
            <initial>Y.</initial>
          </persName>
          <persName>
            <foreName>David</foreName>
            <surname>Lo</surname>
            <initial>D.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering, CSMR-WCRE</title>
        <loc>Antwerp, Belgium</loc>
        <imprint>
          <publisher>
            <orgName>IEEE</orgName>
          </publisher>
          <dateStruct>
            <month>February</month>
            <year>2014</year>
          </dateStruct>
          <biblScope type="pages">44-53</biblScope>
          <ref xlink:href="https://hal.inria.fr/hal-01086077" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01086077</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid83" type="misc" rend="foot" n="footcite:tian:hal-01086079">
      <identifiant type="doi" value="10.1145/2591062.2591071"/>
      <identifiant type="hal" value="hal-01086079"/>
      <monogr x-scientific-popularization="no" x-editorial-board="yes" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no">
        <title level="m">SEWordSim: software-specific word similarity database</title>
        <author>
          <persName>
            <foreName>Yuan</foreName>
            <surname>Tian</surname>
            <initial>Y.</initial>
          </persName>
          <persName>
            <foreName>David</foreName>
            <surname>Lo</surname>
            <initial>D.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
        </author>
        <imprint>
          <publisher>
            <orgName>ACM</orgName>
          </publisher>
          <dateStruct>
            <month>May</month>
            <year>2014</year>
          </dateStruct>
          <biblScope type="pages">568-571</biblScope>
          <ref xlink:href="https://hal.inria.fr/hal-01086079" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01086079</ref>
        </imprint>
      </monogr>
      <note type="howpublished">ICSE Companion 2014 - Companion Proceedings of the 36th International Conference on Software Engineering</note>
      <note type="bnote">Poster</note>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid52" type="inproceedings" rend="foot" n="footcite:Wang:SCAM11">
      <analytic>
        <title level="a">A Study of Cloning in the Linux SCSI Drivers</title>
        <author>
          <persName key="amib-2016-idp139840">
            <foreName>Wei</foreName>
            <surname>Wang</surname>
            <initial>W.</initial>
          </persName>
          <persName>
            <foreName>M.W.</foreName>
            <surname>Godfrey</surname>
            <initial>M.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">Source Code Analysis and Manipulation (SCAM)</title>
        <imprint>
          <publisher>
            <orgName>IEEE</orgName>
          </publisher>
          <dateStruct>
            <year>2011</year>
          </dateStruct>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid82" type="inproceedings" rend="foot" n="footcite:wang:hal-01086084">
      <identifiant type="hal" value="hal-01086084"/>
      <analytic>
        <title level="a">Compositional Vector Space Models for Improved Bug Localization</title>
        <author>
          <persName key="crypt-2014-idp82280">
            <foreName>Shaowei</foreName>
            <surname>Wang</surname>
            <initial>S.</initial>
          </persName>
          <persName>
            <foreName>David</foreName>
            <surname>Lo</surname>
            <initial>D.</initial>
          </persName>
          <persName key="whisper-2014-idm26816">
            <foreName>Julia</foreName>
            <surname>Lawall</surname>
            <initial>J.</initial>
          </persName>
        </author>
      </analytic>
      <monogr x-scientific-popularization="no" x-international-audience="yes" x-proceedings="yes" x-invited-conference="no" x-editorial-board="yes">
        <title level="m">30th International Conference on Software Maintenance and Evolution</title>
        <loc>Victoria, Canada</loc>
        <imprint>
          <publisher>
            <orgName type="organisation">IEEE</orgName>
          </publisher>
          <dateStruct>
            <month>September</month>
            <year>2014</year>
          </dateStruct>
          <biblScope type="pages">171-180</biblScope>
          <ref xlink:href="https://hal.inria.fr/hal-01086084" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">https://<allowbreak/>hal.<allowbreak/>inria.<allowbreak/>fr/<allowbreak/>hal-01086084</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid2" type="inproceedings" rend="foot" n="footcite:Hawblitzel:typesafe-os">
      <analytic>
        <title level="a">Safe to the Last Instruction: Automated Verification of a Type-safe Operating System</title>
        <author>
          <persName>
            <foreName>Jean</foreName>
            <surname>Yang</surname>
            <initial>J.</initial>
          </persName>
          <persName>
            <foreName>Chris</foreName>
            <surname>Hawblitzel</surname>
            <initial>C.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">PLDI</title>
        <imprint>
          <dateStruct>
            <year>2010</year>
          </dateStruct>
          <biblScope type="pages">99–110</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid63" type="manual" rend="foot" n="footcite:coq:manual">
      <monogr>
        <title level="m">The Coq proof assistant reference manual</title>
        <author>
          <persName>
            <foreName/>
            <surname>Coq development team</surname>
            <initial/>
          </persName>
        </author>
        <imprint>
          <dateStruct>
            <year>2015</year>
          </dateStruct>
          <ref xlink:href="http://coq.inria.fr" location="extern" xlink:type="simple" xlink:show="replace" xlink:actuate="onRequest">http://<allowbreak/>coq.<allowbreak/>inria.<allowbreak/>fr</ref>
        </imprint>
      </monogr>
    </biblStruct>
    
    <biblStruct id="whisper-2016-bid21" type="inproceedings" rend="foot" n="footcite:LeGoues:TACAS09">
      <analytic>
        <title level="a">Specification Mining with Few False Positives</title>
        <author>
          <persName>
            <foreName>Claire</foreName>
            <surname>Le Goues</surname>
            <initial>C.</initial>
          </persName>
          <persName>
            <foreName>Westley</foreName>
            <surname>Weimer</surname>
            <initial>W.</initial>
          </persName>
        </author>
      </analytic>
      <monogr>
        <title level="m">TACAS</title>
        <loc>York, UK</loc>
        <title level="s">Lecture Notes in Computer Science</title>
        <imprint>
          <biblScope type="volume">5505</biblScope>
          <dateStruct>
            <month>March</month>
            <year>2009</year>
          </dateStruct>
          <biblScope type="pages">292–306</biblScope>
        </imprint>
      </monogr>
    </biblStruct>
  </biblio>
</raweb>
